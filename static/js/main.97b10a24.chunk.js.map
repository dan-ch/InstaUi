{"version":3,"sources":["components/Navbar.tsx","components/PasswordInput.tsx","components/TextInput.tsx","store/types/types.ts","store/reducers/postReducer.ts","store/reducers/authReducer.ts","store/reducers/userReducer.ts","store/index.ts","utils/axiosInstance.ts","store/actions/authActions.ts","pages/auth/ValidationSchema.ts","pages/auth/SignIn.tsx","pages/auth/SignUp.tsx","components/Modal.tsx","store/actions/postAction.ts","store/actions/userActions.ts","components/Comments.tsx","components/PostDialog.tsx","components/Post.tsx","pages/home/Home.tsx","routes/ProtectedRoute.tsx","routes/PublicRoute.tsx","components/BottomNavbar.tsx","components/DrawerComponent.tsx","components/SimplePostDialog.tsx","components/ProfilePost.tsx","components/ResetPasswordDialog.tsx","pages/profile/EditProfile.tsx","pages/profile/FollowListDialog.tsx","pages/profile/Profile.tsx","pages/search/search.tsx","components/Dropzone.tsx","pages/addPost/PostForm.tsx","pages/addPost/AddPost.tsx","pages/editPost/editPost.tsx","routes/RoutesConfig.tsx","App.tsx","index.tsx"],"names":["Navbar","authenticated","useSelector","state","auth","className","to","fontSize","PasswordInput","label","name","variant","useState","showPassword","setShowPassword","useFormContext","register","errors","formState","TextField","fullWidth","type","color","error","helperText","message","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","style","fill","TextInput","placeholder","SIGN_UP","SIGN_OUT","SIGN_IN_SOCIAL","SET_LOADING","RESET_AUTH","GET_USER_BY_ID","GET_USER_POSTS","LIKE_USER_POST","FOLLOW_USER","SET_AVATAR","SET_NAME","DELETE_POST","SET_LOADING_USER","SET_POSTS","LIKE_POST","ADD_COMMENT","DELETE_POST_COMMENT","DELETE_USER_COMMENT","SET_LOADING_POST","initialState","posts","postLoading","currentPage","hasNextPage","user","token","authLoading","userLoading","persistConfig","key","storage","whitelist","rootReducer","combineReducers","action","payload","map","post","id","avatar_url","userReducer","filter","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","axiosCustom","axios","create","baseURL","process","interceptors","request","use","req","headers","authorization","getState","response","status","dispatch","Promise","reject","signInSocial","passedToken","social","setLoadingAuth","get","params","then","console","log","data","loadingValue","REGEX_PASSWORD","passwordConfirmationValidation","yup","required","min","max","matches","passwordValidation","validationCredentials","email","password","passwordSchema","shape","password_confirmation","signUpSchema","signInSchema","SignIn","useDispatch","methods","useForm","resolver","yupResolver","responseGoogle","accessToken","clientId","String","onSuccess","onFailure","buttonText","tag","render","renderProps","disabled","icon","cookiePolicy","code","onSubmit","handleSubmit","catch","signIn","Button","SignUp","watch","confirmedPassword","signUp","undefined","Modal","open","setOpen","children","scrollType","maxWidth","createPortal","Dialog","onClose","scroll","document","body","setPosts","page","passedPosts","Accept","res","Boolean","next_page_url","current_page","setLoadingPost","likePost","head","likes_count","isLiked","deletePostComment","comment","delete","comments","com","getUserPosts","deleteUserComment","setLoadingUser","Comments","deleteComment","authId","author","content","PostDialog","isOnWall","setComment","anchorEl","setAnchorEl","show","setShow","like","setLike","likesCount","setLikesCount","loading","setLoading","openMenu","toggleLike","likeUserPost","handleCloseMenu","description","img_url","Avatar","alt","src","author_id","event","currentTarget","moment","created_at","format","onChange","target","value","CircularProgress","size","post_id","location","push","addComment","addUserComment","Menu","MenuListProps","MenuItem","deletePost","Post","openPost","setOpenPost","React","useEffect","handleClose","toggle","slice","Home","preventDefault","ProtectedRoute","PublicRoute","BottomNavbar","setValue","ListOfButtons","sx","width","height","BottomNavigation","newValue","button","BottomNavigationAction","component","Link","DrawerComponent","drawerTitle","list","visible","setVisible","Drawer","anchor","Box","role","onKeyDown","SimplePostDialog","ProfilePost","searchActive","comments_count","ResetPasswordDialog","passwordReset","EditProfile","username","setUsername","accept","files","imageCompression","maxWidthOrHeight","useWebWorker","compressedFile","loadedFile","loadedAvatar","FormData","append","_method","newName","changedUsername","FollowListDialog","path","users","setUsers","a","fetchData","charAt","toUpperCase","Profile","loggedUserId","useParams","openEditProfile","setOpenEditProfile","followOpen","setFollowOpen","setPath","getUserById","Number","handleClick","handleOpen","handleOpenEditProfile","handleFollow","followers_count","isFollowed","followUser","handleFollowOpen","passedPath","followed_count","posts_count","List","ListItem","ListItemIcon","ListItemText","TabPanel","props","index","other","hidden","p","Search","debounced","useDebouncedCallback","searchValue","length","foundUsers","foundPosts","e","startAdornment","borderBottom","borderColor","Tabs","Tab","Dropzone","setFile","useDropzone","onDrop","acceptedFiles","forEach","file","multiple","maxFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","PostForm","setPost","handleChange","photo","URL","createObjectURL","multiline","maxRows","tags","steps","AddPost","activeStep","setActiveStep","setIsOpen","navigate","useNavigate","stepsElements","htmlElement","handleAddPost","fData","options","maxSizeMB","Stepper","alternativeLabel","Step","StepLabel","Typography","mt","mb","display","flexDirection","pt","flex","prevActiveStep","mr","EditPost","useLocation","unmounted","put","RoutesConfig","element","App","ReactDOM","StrictMode","getElementById"],"mappings":"mNAWaA,EAAgC,WAC3C,IAAQC,EAAkBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAA1DH,cACR,OACE,qBAAKI,UAAU,SAAf,SACGJ,EACC,sBAAKI,UAAU,cAAf,UACE,cAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,aAA3B,2BAEA,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAAMC,GAAG,WAAT,SAAoB,mBAAGD,UAAU,8BAMrC,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,aAAb,2BACA,cAAC,IAAD,CAAeE,SAAS,gB,uGChBrBC,EAA8C,SAAC,GAIrD,IAAD,EAHJC,EAGI,EAHJA,MACAC,EAEI,EAFJA,KACAC,EACI,EADJA,QAEA,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAKA,EAGIC,cAFFC,EADF,EACEA,SACaC,EAFf,EAEEC,UAAaD,OAEf,OACE,cAACE,EAAA,EAAD,2BACMH,EAASN,IADf,IAEED,MAAOA,EACPC,KAAMA,EACNU,WAAS,EACTC,KAAMR,EAAe,OAAS,WAC9BS,MAAM,UACNX,QAASA,EACTY,QAASN,EAAOP,GAChBc,WAAYP,EAAOP,GAAP,UAAeO,EAAOP,UAAtB,aAAe,EAAce,QAAU,GACnDC,WAAY,CACVC,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACC,EAAA,EAAD,CAAYC,QAtBP,WACbjB,GAAiBD,IAqBT,SACGA,EACC,cAAC,IAAD,CAAgBmB,MAAO,CAAEC,KAAM,aAE/B,cAAC,IAAD,CAAmBD,MAAO,CAAEC,KAAM,sBChCrCC,EAAsC,SAAC,GAM7C,IAAD,EALJzB,EAKI,EALJA,MACAC,EAII,EAJJA,KACAyB,EAGI,EAHJA,YACAd,EAEI,EAFJA,KACAV,EACI,EADJA,QAEA,EAGII,cAFFC,EADF,EACEA,SACaC,EAFf,EAEEC,UAAaD,OAEf,OACE,cAACE,EAAA,EAAD,2BACMH,EAASN,IADf,IAEED,MAAOA,EACPC,KAAMA,EACNyB,YAAaA,EACbf,WAAS,EACTC,KAAMA,EACNC,MAAM,UACNX,QAASA,EACTY,QAASN,EAAOP,GAChBc,WAAYP,EAAOP,GAAP,UAAeO,EAAOP,UAAtB,aAAe,EAAce,QAAU,O,4CC/B5CW,EAAU,UACVC,EAAW,WACXC,EAAiB,iBACjBC,EAAc,cACdC,EAAa,aAEbC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAiB,iBAEjBC,EAAc,cACdC,EAAa,aACbC,EAAW,WACXC,EAAc,cACdC,EAAmB,mBAGnBC,EAAY,YACZC,EAAY,YACZC,EAAc,cACdC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBCb1BC,EAA0B,CAC5BC,MAAO,KACPC,aAAa,EACbC,YAAa,EACbC,aAAa,GCHJJ,EAA0B,CACnCK,KAAM,KACN3D,eAAe,EACf4D,MAAO,GACPC,aAAa,G,uCCJXP,GAA0B,CAC5BK,KAAM,KACNJ,MAAO,KACPO,aAAa,EACbL,YAAa,EACbC,aAAa,GCRJK,GAAgB,CACzBC,IAAK,OACLC,aACAC,UAAW,CAAC,SAGVC,GAAcC,0BAAgB,CAChCb,MHGW,WAAqD,IAApDrD,EAAmD,uDAA3CoD,EAAce,EAA6B,uCAC/D,OAAOA,EAAOjD,MACV,KAAKiC,EACD,OAAO,2BACAnD,GADP,IAEIsD,YAAaa,EAAOC,UAE5B,KAAKtB,EACD,OAAO,2BACA9C,GADP,IAEIqD,MAAOc,EAAOC,QAAQf,MACtBE,YAAaY,EAAOC,QAAQb,YAC5BC,YAAaW,EAAOC,QAAQZ,YAC5BF,aAAa,IAErB,KAAKP,EACL,KAAKC,EACL,KAAKC,EACD,OAAO,2BACAjD,GADP,IAEIqD,MAAOrD,EAAMqD,MAAOgB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,KAAOJ,EAAOC,QAAQG,GAAKJ,EAAOC,QAAUE,OAEzF,QACI,OAAOtE,IGzBfC,KFGW,WAAqD,IAApDD,EAAmD,uDAA3CoD,EAAce,EAA6B,uCAC/D,OAAOA,EAAOjD,MACV,KAAKkB,EACD,OAAO,2BACApC,GADP,IAEI2D,YAAaQ,EAAOC,UAE5B,KAAKnC,EACD,OAAO,2BACAjC,GADP,IAEIyD,KAAMU,EAAOC,QAAQX,KACrBC,MAAOS,EAAOC,QAAQV,MACtB5D,eAAe,EACf6D,aAAa,IAErB,KAAKtB,EACL,KAAKH,EACD,OAAO,2BACAlC,GADP,IAEI0D,MAAO,GACP5D,eAAe,EACf2D,KAAM,KACNE,aAAa,IAErB,KAAKxB,EACD,OAAO,2BACAnC,GADP,IAEI2D,aAAa,IAErB,KAAKjB,EACD,OAAO,2BACA1C,GADP,IAEIyD,KAAMzD,EAAMyD,MAAN,2BACCzD,EAAMyD,MADP,IAEFe,WAAYL,EAAOC,YAG/B,KAAKzB,EACD,OAAO,2BACA3C,GADP,IAEIyD,KAAMzD,EAAMyD,MAAN,2BACCzD,EAAMyD,MADP,IAEFlD,KAAM4D,EAAOC,YAGzB,QACI,OAAOpE,IEhDfyE,YDGW,WAAoD,IAAnDzE,EAAkD,uDAA1CoD,GAAce,EAA4B,uCAC9D,OAAQA,EAAOjD,MACX,KAAK2B,EACD,kCACO7C,GADP,IAEI4D,YAAaO,EAAOC,UAE5B,KAAK9B,EACD,OAAO,2BACAtC,GADP,IAEIyD,KAAMU,EAAOC,QACbf,MAAOc,EAAOC,QAAQf,MACtBO,aAAa,IAErB,KAAKrB,EACD,OAAO,2BACAvC,GADP,IAEIqD,MAAOc,EAAOC,QAAQf,MACtBE,YAAaY,EAAOC,QAAQb,YAC5BC,YAAaW,EAAOC,QAAQZ,cAEpC,KAAKf,EACD,OAAO,2BACAzC,GADP,IAEIyD,KAAMU,EAAOC,QACbR,aAAa,IAErB,KAAKlB,EACD,OAAO,2BACA1C,GADP,IAEIyD,KAAMzD,EAAMyD,MAAN,2BACCzD,EAAMyD,MADP,IAEFe,WAAYL,EAAOC,UAEvBR,aAAa,IAErB,KAAKhB,EACD,OAAO,2BACA5C,GADP,IAEIqD,MAAOrD,EAAMqD,MAAOqB,QAAO,SAAAJ,GAAI,OAAIA,EAAKC,KAAOJ,EAAOC,WACtDR,aAAa,IAErB,KAAKpB,EACL,KAAKU,EACD,OAAO,2BACAlD,GADP,IAEIqD,MAAOrD,EAAMqD,MAAOgB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,KAAOJ,EAAOC,QAAQG,GAAKJ,EAAOC,QAAUE,OAEzF,QACI,OAAOtE,MCjDb2E,GAAmBC,aAAef,GAAeI,IAEjDY,GAAQC,sBACVH,GACAI,8BAAoBC,0BAAgBC,OAGlCC,GAAYC,YAAaN,ICvBzBO,GAAcC,IAAMC,OAAO,CAC7BC,QAHYC,gDAMhBJ,GAAYK,aAAaC,QAAQC,KAAI,SAAUC,GAE3C,OADAA,EAAIC,QAASC,cAAb,iBAAuCjB,GAAMkB,WAAW9F,KAAKyD,OACtDkC,KAGXR,GAAYK,aAAaO,SAASL,KAAI,SAAUK,GAA0B,OAAOA,KAC9E,SAAU5E,GAIT,OAH6B,MAA1BA,EAAM4E,SAASC,QACdpB,GAAMqB,SAAS,CAAChF,KAAMmB,IAEnB8D,QAAQC,OAAOhF,MAGXgE,UCwDFiB,GAAe,SAACC,EAAqBC,GAC9C,OAAO,SAAAL,GACHA,EAASM,IAAe,IACxB,IACInB,GAAMoB,IAAN,kBAAqBF,EAArB,aACI,CACIG,OAAQ,CACJhD,MAAO4C,KAEZK,MAAK,SAACX,GACLY,QAAQC,IAAIb,GACZ,IAAMvC,EAAOuC,EAASc,KAAKA,KAAKrD,KAC1BC,EAAQsC,EAASc,KAAKA,KAAKpD,MACjCkD,QAAQC,IAAInD,GACZwC,EAAS,CACLhF,KAAMe,EACNmC,QAAS,CACLX,OACAC,WAGZkD,QAAQC,IAAIb,EAASc,KAAKA,SAGlC,MAAO1F,GACHwF,QAAQC,IAAIzF,MA8EXoF,GAAiB,SAACO,GAC3B,OAAO,SAAAb,GACH,IACIA,EAAS,CACLhF,KAAMkB,EACNgC,QAAS2C,IAEf,MAAO3F,GACLwF,QAAQC,IAAIzF,M,SC5LlB4F,GACJ,yEAEIC,GAAiCC,OAElCC,SAAS,wBACTC,IAAI,EAAG,yBACPC,IAAI,GAAI,wBACRC,QAAQN,GAAgB,wCAEvBO,GAAqBL,OAEtBC,SAAS,qCACTC,IAAI,EAAG,yBACPC,IAAI,GAAI,wBACRC,QAAQN,GAAgB,wCAEvBQ,GAAwB,CAC5BC,MAAOP,OAAaO,MAAM,iBAAiBN,SAAS,qBACpDO,SAAUH,IAGCI,GAAiBT,OAAaU,MAAM,CAC/CF,SAAUH,GACVM,sBAAuBZ,KAGZa,GAAeZ,OAAaU,MAAb,2BAAuBJ,IAAvB,IAA+CK,sBAAuBZ,GAChG1G,KAAM2G,OACDC,SAAS,iBACTC,IAAI,EAAG,qBACPC,IAAI,GAAI,uBAGFU,GAAeb,OAAaU,MAAMJ,I,0CCjBlCQ,GAAgC,WACzC,IAAOrE,EAAe5D,aAAY,SAACC,GAAD,OAAqBA,EAAMC,QAAtD0D,YACHQ,EAAS8D,cACTC,EAAUC,YAAoB,CAClCC,SAAUC,YAAYN,MAMlBO,EAAiB,SAACtC,GACtBY,QAAQC,IAAIb,GACZ7B,EAAOkC,GAAaL,EAASuC,YAAa,YAU5C,OACE,sBAAKrI,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,wCACA,0EAEF,sBAAKA,UAAU,wBAAf,UACE,cAAC,KAAD,CACIA,UAAU,+BACVsI,SAAUC,OAAOjD,4EACjBkD,UAAWJ,EACXK,UAAWL,EACXM,WAAW,SACXC,IAAI,SACJC,OAAQ,SAAAC,GAAW,OACf,wBAAQ7I,UAAU,mEACV0B,QAASmH,EAAYnH,QACrBoH,SAAUD,EAAYC,SAF9B,SAGE,mBAAG9I,UAAU,wDAEnB+I,MAAM,EAENC,aAAc,uBAElB,cAAC,KAAD,CAAaV,SAAUhD,uBACVtF,UAAU,mEACVwI,UAjCD,SAAC1C,GACjBY,QAAQC,IAAIb,GACZ7B,EAAOkC,GAAaL,EAASmD,KAAM,YAgClBP,WAAY,mBAAG1I,UAAU,oDACzByI,UA9BD,SAAC3C,GAAD,OAAmBY,QAAQxF,MAAM4E,SAgC/C,eAAC,IAAD,2BAAkBkC,GAAlB,cACE,uBACEkB,SAAUlB,EAAQmB,cAhDT,SAACvC,GAChB3C,EFOkB,SAAC2C,GACnB,OAAO,SAAAZ,GACHA,EAASM,IAAe,IACxB,IACGnB,GAAMf,KAAK,SAAUwC,GACnBH,MACD,SAACX,GACEY,QAAQC,IAAIb,GAEX,IAAMvC,EAAOuC,EAASc,KAAKA,KAAKrD,KAC1BC,EAAQsC,EAASc,KAAKA,KAAKpD,MAEjCwC,EAAS,CACLhF,KAAMe,EACNmC,QAAS,CACLX,OACAC,cAIV4F,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEnC,MAAOA,GACHwF,QAAQC,IAAIzF,KE9BbmI,CAAOzC,OAgDR5G,UAAU,oBAFZ,UAIE,cAAC,EAAD,CACEI,MAAM,QACNC,KAAK,QACLyB,YAAY,kBACZd,KAAK,QACLV,QAAQ,aAEV,cAAC,EAAD,CAAeF,MAAM,WAAWC,KAAK,WAAWC,QAAQ,aACvDmD,EACC,cAAC6F,EAAA,EAAD,CAAQhJ,QAAQ,WAAWW,MAAM,UAAU6H,UAAQ,EAAnD,wBAIA,cAACQ,EAAA,EAAD,CAAQtI,KAAK,SAASV,QAAQ,YAA9B,wBAOJ,sBAAKN,UAAU,eAAf,UACA,wDACA,cAAC,IAAD,CAAMC,GAAG,UAAT,gCCnFKsJ,GAAgC,WAC3C,IAAMtF,EAAS8D,cACTC,EAAUC,YAAoB,CAClCC,SAAUC,YAAYP,MAExB,EAAsCI,EAAQwB,MAAM,CAAC,WAAY,0BAAjE,mBAAOhC,EAAP,KAAiBiC,EAAjB,KAIA,OACE,sBAAKzJ,UAAU,gBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,2CAGF,cAAC,IAAD,2BAAkBgI,GAAlB,aACE,uBACEkB,SAAUlB,EAAQmB,cAXT,SAACvC,GAChB3C,EHdkB,SAAC2C,GACnB,OAAO,SAAAZ,GACHA,EAASM,IAAe,IACxB,IACGnB,GAAMf,KAAK,aAAcwC,GACvBH,MACD,SAACX,GACD,IAAMvC,EAAOuC,EAASc,KAAKA,KAAKrD,KAC1BC,EAAQsC,EAASc,KAAKA,KAAKpD,MAEjCwC,EAAS,CACLhF,KAAMe,EACNmC,QAAS,CACLX,OACAC,cAGN4F,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEnC,MAAOA,GACHwF,QAAQC,IAAIzF,KGNbwI,CAAO9C,OAWR5G,UAAU,oBAFZ,UAIE,cAAC,EAAD,CACEI,MAAM,WACNC,KAAK,OACLyB,YAAY,WACZd,KAAK,OACLV,QAAQ,aAEV,cAAC,EAAD,CACEF,MAAM,QACNC,KAAK,QACLyB,YAAY,kBACZd,KAAK,QACLV,QAAQ,aAEV,cAAC,EAAD,CAAeF,MAAM,WAAWC,KAAK,WAAWC,QAAQ,aACxD,cAAC,EAAD,CACEF,MAAM,mBACNC,KAAK,wBACLC,QAAQ,kBAEIqJ,IAAbnC,GAA0BA,IAAaiC,EAAoB,cAACH,EAAA,EAAD,CAAQtI,KAAK,SAASV,QAAQ,YAA9B,qBAEhD,cAACgJ,EAAA,EAAD,CAAQtI,KAAK,SAASV,QAAQ,YAAYwI,UAAQ,EAAlD,2BAMhB,uBAAM9I,UAAU,eAAhB,UACE,0DACA,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,wBAA7B,4B,uEClDK4J,GAAwB,SAAC,GAAiE,IAA/DC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,SAAUlJ,EAAe,EAAfA,UAInF,OAAOmJ,uBACL,cAACC,GAAA,EAAD,CACIN,KAAMA,EACNO,QANc,WAChBN,GAAQ,IAMNO,OAAQL,GAA0B,OAClChK,UAAU,QACViK,SAAUA,EACVlJ,UAAWA,EANf,SAQKgJ,IAEJO,SAASC,O,SCfHC,GAAW,SAACC,EAAcC,GACnC,OAAO,SAAA1E,GACH,IAAIb,GAAMoB,IAAI,UAAW,CACjBC,OAAQ,CACJiE,QAEJ9E,QAAS,CACPgF,OAAQ,sBAETlE,MAAK,SAACmE,GAEL,IAAMzH,EAAK,uBAAOuH,GAAP,aAAuBE,EAAIhE,KAAKA,KAAKA,OAC1CtD,EAAcuH,QAAQD,EAAIhE,KAAKA,KAAKkE,eACpCzH,EAAcuH,EAAIhE,KAAKA,KAAKmE,aAClCrE,QAAQC,IAAIrD,GAEZoD,QAAQC,IAAIiE,EAAIhE,KAAKA,KAAKkE,eAC1BpE,QAAQC,IAAIiE,EAAIhE,KAAKA,MACrBZ,EAAS,CACLhF,KAAM4B,EACNsB,QAAS,CACLf,QACAE,cACAC,oBAGT8F,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEtC,MAAOA,GACHwF,QAAQC,IAAIzF,GA3BhB,QA8BI8J,IAAe,MAKdC,GAAW,SAAC7G,GACrB,OAAO,SAAA4B,GACH,IACIb,GAAM+F,KAAN,iBAAqB9G,EAAKC,GAA1B,SAAqC,CACjCsB,QAAS,CACLgF,OAAQ,sBAEblE,MAAK,WACJrC,EAAK+G,aAAe/G,EAAKgH,SAAW,EAAI,EACxChH,EAAKgH,SAAWhH,EAAKgH,QACrBpF,EAAS,CACLhF,KAAM6B,EACNqB,QAASE,OAEdgF,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,MA8BXmK,GAAoB,SAACjH,EAAiBkH,GAC/C,OAAO,SAAAtF,GACH,IACIU,QAAQC,IAAI2E,EAAQjH,IACpBc,GAAMoG,OAAN,qBAA2BD,EAAQjH,KACjCoC,MAAK,SAACX,GACJY,QAAQC,IAAIb,GACZ,IAAM0F,EAAWpH,EAAKoH,SAAShH,QAAO,SAACiH,GAAD,OAASA,EAAIpH,KAAOiH,EAAQjH,MAClEqC,QAAQC,IAAI6E,GACZxF,EAAS,CACLhF,KAAM+B,EACNmB,QAAQ,2BACDE,GADA,IAEHoH,kBAGTpC,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,MAKX8J,GAAiB,SAACnE,GAC3B,OAAO,SAAAb,GACH,IACIA,EAAS,CACLhF,KAAMiC,EACNiB,QAAS2C,IAGjB,MAAO3F,GACHwF,QAAQC,IAAIzF,MC/FXwK,GAAe,SAACrH,EAAYqG,EAA0BD,GAC/D,OAAO,SAAAzE,GACH,IACIb,GAAMoB,IAAN,kBAAqBlC,EAArB,UAAiC,CAC7BmC,OAAO,CACHiE,QAEJ9E,QAAS,CACLgF,OAAQ,sBAEblE,MAAK,SAACmE,GAEL,IAAMzH,EAAK,uBAAOuH,GAAP,aAAuBE,EAAIhE,KAAKA,KAAKA,OAC1CtD,EAAcuH,QAAQD,EAAIhE,KAAKA,KAAKkE,eACpCzH,EAAcuH,EAAIhE,KAAKA,KAAKmE,aAClC/E,EAAS,CACLhF,KAAMqB,EACN6B,QAAS,CACLf,QACAE,cACAC,oBAGT8F,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,MA+CXyK,GAAoB,SAACvH,EAAiBkH,GAC/C,OAAO,SAAAtF,GACH,IACIb,GAAMoG,OAAN,qBAA2BD,EAAQjH,KACjCoC,MAAK,SAACX,GACJY,QAAQC,IAAIb,GACZ,IAAM0F,EAAWpH,EAAKoH,SAAShH,QAAO,SAACiH,GAAD,OAASA,EAAIpH,KAAOiH,EAAQjH,MAClE2B,EAAS,CACLhF,KAAMgC,EACNkB,QAAQ,2BACDE,GADA,IAEHoH,kBAGTpC,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,MAoDX0K,GAAiB,SAAC/E,GAC3B,OAAO,SAAAb,GACH,IACIA,EAAS,CACLhF,KAAM2B,EACNuB,QAAS2C,IAGjB,MAAO3F,GACHwF,QAAQC,IAAIzF,M,UC7KX2K,GAAoC,SAAC,GAAoC,IAAnCP,EAAkC,EAAlCA,QAASlH,EAAyB,EAAzBA,KAAM0H,EAAmB,EAAnBA,cACxDC,EAASlM,aAAY,SAACC,GAAD,uBAAsBA,EAAMC,KAAKwD,YAAjC,aAAsB,EAAiBc,MAC5DJ,EAAS8D,cAMf,OACI,sBAAsB/H,UAAU,gBAAhC,UACI,8BACI,cAAC,IAAD,CAAMC,GAAE,mBAAcmE,EAAKC,IAAMrE,UAAU,iBAA3C,SAA6DsL,EAAQU,OAAO3L,OAAaiL,EAAQW,WAEpGX,EAAQU,OAAO3H,KAAO0H,EAAS,mBAAG/L,UAAU,wBAAwB0B,QATjD,WACxBuC,EAAO6H,EAAc1H,EAAMkH,KAQS,oBAAgF,+BAJ1GA,EAAQjH,K,qBCKb6H,GAAkC,SAAC,GAAqC,IAApC9H,EAAmC,EAAnCA,KAAeb,GAAoB,EAA7BuG,QAA6B,EAApBvG,MAAM4I,EAAc,EAAdA,SAClE,EAA8B5L,mBAAS,IAAvC,mBAAO+K,EAAP,KAAgBc,EAAhB,KACA,EAAgC7L,mBAA6B,MAA7D,mBAAO8L,EAAP,KAAiBC,EAAjB,KACA,EAAwB/L,oBAAS,GAAjC,mBAAOgM,EAAP,KAAaC,EAAb,KACA,EAAwBjM,mBAAS6D,EAAKgH,SAAtC,mBAAOqB,EAAP,KAAaC,EAAb,KACA,EAAoCnM,mBAAS6D,EAAK+G,aAAlD,mBAAOwB,EAAP,KAAmBC,EAAnB,KACA,EAA8BrM,oBAAS,GAAvC,mBAAOsM,EAAP,KAAgBC,EAAhB,KACMf,EAASlM,aAAY,SAACC,GAAD,uBAAsBA,EAAMC,KAAKwD,YAAjC,aAAsB,EAAiBc,MAE5DJ,EAAS8D,cACTgF,EAAWlC,QAAQwB,GAEnBW,EAAa,WACfN,GAASD,GACFG,EAAPH,EAAqBE,EAAa,EAAmBA,EAAa,GACvD1I,EAAXkI,EAAkBlB,GAAS7G,GFiHP,SAACA,GACzB,OAAO,SAAA4B,GACH,IACIb,GAAM+F,KAAN,iBAAqB9G,EAAKC,GAA1B,SAAqC,CACjCsB,QAAS,CACLgF,OAAQ,sBAEblE,MAAK,WACJrC,EAAK+G,aAAe/G,EAAKgH,SAAW,EAAI,EACxChH,EAAKgH,SAAWhH,EAAKgH,QACrBpF,EAAS,CACLhF,KAAMsB,EACN4B,QAASE,OAEdgF,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,KElI2B+L,CAAa7I,KAUtD8I,EAAkB,WACpBZ,EAAY,OAkBRjI,EAA4DD,EAA5DC,GAAI2H,EAAwD5H,EAAxD4H,OAAQmB,EAAgD/I,EAAhD+I,YAA0B3B,GAAsBpH,EAAnC+G,YAAmC/G,EAAtBoH,UAAU4B,EAAYhJ,EAAZgJ,QACxD,OACI,sBAAKpN,UAAU,cAAf,UACA,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,cAACqN,GAAA,EAAD,CAAQC,IAAK/J,EAAKlD,KAAMkN,IAAKhK,EAAKe,WAAYtE,UAAU,wCACxD,mBAAIA,UAAU,2BAAd,SAA0CuD,EAAKlD,UAElD0L,IAAW3H,EAAKoJ,UAAY,cAAC/L,EAAA,EAAD,CAAYzB,UAAU,oBAAoB0B,QA9B3D,SAAC+L,GACjBnB,EAAYmB,EAAMC,gBA6Be,SACzB,cAAC,KAAD,MACY,gCAIpB,qBAAKH,IAAKH,EAASE,IAAK/J,EAAKlD,OAC7B,0BAASL,UAAU,uBAAnB,UACI,sBAAKA,UAAU,uBAAf,UACKyM,EAAO,mBAAGzM,UAAU,uCAAuC0B,QAASsL,IAAgB,mBAAGhN,UAAU,cAAc0B,QAASsL,IACzH,mBAAGhN,UAAU,mCAAmC0B,QA5C7C,WACX8K,GAASD,MA4CD,mBAAGvM,UAAU,yCAGjB,oBAAGA,UAAU,qBAAb,oBAA0C2M,KAC1C,sBAAK3M,UAAU,oBAAf,UAAmC,cAAC,IAAD,CAAMC,GAAE,mBAAc+L,EAAO3H,IAAMrE,UAAU,wCAA7C,SAAsFgM,EAAO3L,OAC3H8M,KACL,qBAAKnN,UAAU,gBAAf,SACKwL,GAAYA,EAASrH,KAAI,SAAAmH,GAAO,OAC7B,cAAC,GAAD,CAA2BlH,KAAMA,EAAMkH,QAASA,EACtCQ,cAAeK,EAAWd,GAAoBM,IADzCL,EAAQjH,SAI/B,mBAAGrE,UAAU,2BAAb,8BAAuD2N,KAAuB,IAAhBvJ,EAAKwJ,YAAiBC,OAAO,iBAC1FtB,GACD,0BAASvM,UAAU,iCAAnB,UACI,uBAAOA,UAAU,qBAAqB8B,YAAY,iBAAiBgM,SA5C1D,SAACL,GAClBrB,EAAWqB,EAAMM,OAAOC,QA2C2EA,MAAO1C,IACjGuB,EAAU,cAACoB,GAAA,EAAD,CAAkBC,KAAM,KAAS,wBAAQlO,UAAU,6BAA6B0B,QAzC9E,WACrBoL,GAAW,GACA7I,EAAXkI,EHKkB,SAACb,EAAiBlH,EAAiB0I,GACzD,OAAO,SAAA9G,GACH,IACIb,GAAMf,KAAK,aAAc,CAAC6H,QAASX,EAAS6C,QAAS/J,EAAKC,IAAK,IAE5DoC,MAAK,SAACX,GACLY,QAAQC,IAAIb,GACZ,IAAMsI,EAAWtI,EAASc,KAAKA,KAAKwH,SACpCjJ,GAAMoB,IAAN,WAAc6H,IAAY3H,MAAK,SAACX,GAC5B1B,EAAKoH,SAAS6C,KAAKvI,EAASc,KAAKA,MACjCF,QAAQC,IAAIb,GACZE,EAAS,CACLhF,KAAM8B,EACNoB,QAASE,IAEb0I,GAAW,MACZ1D,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,SACjCkI,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,KGzBEoN,CAAWhD,EAASlH,EAAM0I,GF+DtB,SAACxB,EAAiBlH,EAAiB0I,GAC7D,OAAO,SAAA9G,GACH,IACIb,GAAMf,KAAK,aAAc,CAAC6H,QAASX,EAAS6C,QAAS/J,EAAKC,IAAK,IAE5DoC,MAAK,SAACX,GACLY,QAAQC,IAAIb,GACZ,IAAMsI,EAAWtI,EAASc,KAAKA,KAAKwH,SACpCjJ,GAAMoB,IAAN,WAAc6H,IAAY3H,MAAK,SAACX,GAC5B1B,EAAKoH,SAAS6C,KAAKvI,EAASc,KAAKA,MACjCF,QAAQC,IAAIb,GACZE,EAAS,CACLhF,KZpIQ,gBYqIRkD,QAASE,IAEb0I,GAAW,MACZ1D,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,SACjCkI,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,KEnFkDqN,CAAejD,EAASlH,EAAM0I,IAChGV,EAAW,KAsCyC,yBAGpD,eAACoC,GAAA,EAAD,CACInK,GAAG,aACHgI,SAAUA,EACVxC,KAAMkD,EACN3C,QAAS8C,EACTuB,cAAe,CACX,kBAAmB,gBAN3B,UASKlL,GAAQA,EAAKc,KAAOD,EAAKoJ,WAAa,cAACkB,GAAA,EAAD,CAAUhN,QA9DpC,WACjBuC,EF2BkB,SAACI,GACvB,OAAO,SAAA2B,GACHA,EAAS4F,IAAe,IACxB,IACIzG,GAAMoG,OAAN,iBAAuBlH,GAAM,CACzBsB,QAAS,CACLgF,OAAQ,sBAEblE,MAAK,WACJT,EAAS,CACLhF,KAAM0B,EACNwB,QAASG,OAEd+E,OAAM,SAAAlI,GAAK,OAAIwF,QAAQC,IAAIzF,MAElC,MAAOA,GACHwF,QAAQC,IAAIzF,GAbhB,QAgBI0K,IAAe,KE9CZ+C,CAAWtK,IAClB6I,KA4D2C,oBACtC3J,GAAQA,EAAKc,KAAOD,EAAKoJ,WAAa,cAAC,IAAD,CAAMvN,GAAE,YAAeH,MAAO,CAACuE,GAAID,EAAKC,IAAxC,SAA6C,cAACqK,GAAA,EAAD,qBACpF,cAACA,GAAA,EAAD,CAAUhN,QAASwL,EAAnB,2BCnGC0B,GAA4B,SAAC,GAEnC,IADHxK,EACE,EADFA,KAEIH,EAAS8D,cACPoF,EAAuD/I,EAAvD+I,YAAa/B,EAA0ChH,EAA1CgH,QAASD,EAAiC/G,EAAjC+G,YAAaK,EAAoBpH,EAApBoH,SAAUQ,EAAU5H,EAAV4H,OACrD,EAAgCzL,oBAAS,GAAzC,mBAAOsO,EAAP,KAAiBC,EAAjB,KACA,EAAgCC,IAAMxO,SAA6B,MAAnE,mBAAO8L,EAAP,KAAiBC,EAAjB,KAEMzC,GADShK,aAAY,SAACC,GAAD,uBAAsBA,EAAMC,KAAKwD,YAAjC,aAAsB,EAAiBc,MACrDwG,QAAQwB,IACrB2C,qBAAU,cAEP,CAAC5D,IAEJ,IAIM6D,EAAc,WAClB3C,EAAY,OAQR4C,EAAS,WACbjL,EAAOgH,GAAS7G,KAGlB,OACE,sBAAKpE,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,gCACE,cAACqN,GAAA,EAAD,CAAQC,IAAI,OAAOC,IAAKvB,EAAO1H,aAC/B,cAAC,IAAD,CAAMrE,GAAE,mBAAc+L,EAAO3H,IAAMrE,UAAU,iBAA7C,SAA+DgM,EAAO3L,UAExE,cAACoB,EAAA,EAAD,CAAYC,QAxBE,SAAC+L,GACnBnB,EAAYmB,EAAMC,gBAuBd,SACE,cAAC,KAAD,MAEF,eAACc,GAAA,EAAD,CACEnK,GAAG,aACHgI,SAAUA,EACVxC,KAAMA,EACNO,QAAS6E,EACTR,cAAe,CACb,kBAAmB,gBANvB,UASE,cAACC,GAAA,EAAD,CAAUhN,QA5BC,WACjBuN,IACAH,GAAY,IA0BN,8BACA,cAACJ,GAAA,EAAD,CAAUhN,QAASuN,EAAnB,4BACA,cAACP,GAAA,EAAD,CAAUhN,QAASuN,EAAnB,0BAGJ,gCACE,qBAAKjP,UAAU,YAAYuN,IAAKnJ,EAAKgJ,QAASE,IAAI,eAClD,sBAAKtN,UAAU,aAAf,UACE,sBAAKA,UAAU,gBAAf,UACGoL,EAAU,mBAAGpL,UAAU,0CAA0C0B,QAASwN,IACvE,mBAAGlP,UAAU,wBAAwB0B,QAASwN,IAClD,mBAAGlP,UAAU,iCAGf,oBAAGA,UAAU,aAAb,oBAAkCmL,KAElC,sBAAKnL,UAAU,oBAAf,UAAmC,cAAC,IAAD,CAAMC,GAAE,mBAAc+L,EAAO3H,IAAMrE,UAAU,wCAA7C,SAAsFgM,EAAO3L,OAC7H8M,KACH,qBAAKnN,UAAU,gBAAf,SACGwL,GAAYA,EAAS2D,MAAM,EAAE,GAAGhL,KAAI,SAAAmH,GAAO,OACxC,cAAC,GAAD,CAA2BA,QAASA,EAASlH,KAAMA,EAAM0H,cAAeT,IAAzDC,EAAQjH,SAI7B,mBAAGrE,UAAU,qBAAb,8BAAiD2N,KAAuB,IAAhBvJ,EAAKwJ,YAAiBC,OAAO,uBAGzF,cAAC,GAAD,CAAOhE,KAAMgF,EAAU/E,QAASgF,EAAa/N,WAAW,EAAMkJ,SAAS,KAAKF,SAAU,cAAC,GAAD,CAAY3F,KAAMA,EAAMb,KAAMa,EAAK4H,OAAQlC,QAASgF,EAAa3C,UAAU,UCvF1JiD,GAA4B,SAAC,GAAQ,gBAChD,IAAMnL,EAAS8D,cACf,EAAyDlI,aAAY,SAACC,GAAD,OAAsBA,EAAMqD,SAAzFA,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaE,EAA5B,EAA4BA,YAAaD,EAAzC,EAAyCA,YAEzC2L,qBAAU,WACR/K,EAAO+G,IAAe,IACtB/G,EAAOuG,GAAS,EAAG,OAClB,IAQH,OAAIpH,EAEA,qBAAKpD,UAAU,eAAf,SACE,cAACiO,GAAA,EAAD,CAAkBC,KAAM,OAM5B,sBAAKlO,UAAU,eAAf,UACGmD,GACCA,EAAMgB,KAAI,SAACC,GAAD,OACR,cAAC,GAAD,CAEEA,KAAMA,GADDA,EAAKC,OAIff,GAAe,cAACgG,EAAA,EAAD,CAAQ5H,QAtBR,SAAC+L,GACnBA,EAAM4B,iBACN/L,GAAeW,EAAOuG,GAASnH,EAAY,EAAGF,KAoB5B,oC,SCpCTmM,GAAgD,SAAC,GAAkB,IAAhBvF,EAAe,EAAfA,SAO9D,OAN0BlK,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAA1DH,cAOCmK,EAGF,cAAC,KAAD,CAAU9J,GAAG,aCVTsP,GAA0C,SAAC,GAAkB,IAAhBxF,EAAe,EAAfA,SAGxD,OAF0BlK,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAA1DH,cAGC,cAAC,KAAD,CAAUK,GAAG,UAGf8J,G,8DCKIyF,GAA4C,WACrD,MAA0BT,WAAe,QAAzC,mBAAOf,EAAP,KAAcyB,EAAd,KACQlM,EAAS1D,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAAjDwD,KACFmM,EAAqC,CACvC,CACI1B,MAAO,OACPjF,KAAM,cAAC,KAAD,KAEV,CACIiF,MAAO,SACPjF,KAAM,cAAC,KAAD,KAEV,CACIiF,MAAM,WAAD,OAAazK,EAAMc,IACxB0E,KAAK,cAACsE,GAAA,EAAD,CACDC,IAAK/J,EAAMlD,KACXkN,IAAKhK,EAAMe,WACXqL,GAAI,CAAEC,MAAO,GAAIC,OAAQ,QASvC,OACQ,cAACC,GAAA,EAAD,CAAkB9B,MAAOA,EAAOF,SALjB,SAACL,EAA8BsC,GAChDN,EAASM,IAIiD/P,UAAU,gBAAlE,SACK0P,EAAcvL,KAAI,SAAC6L,GAChB,OACI,cAACC,GAAA,EAAD,CAEIC,UAAWC,IACXlQ,GAAE,WAAM+P,EAAOhC,OACfA,MAAOgC,EAAOhC,MACdjF,KAAMiH,EAAOjH,MAJRiH,EAAOhC,a,oBC1CzBoC,GAAyC,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,KACjE,EAA8B/P,oBAAS,GAAvC,mBAAOgQ,EAAP,KAAgBC,EAAhB,KAEMtB,EAAS,WACXsB,GAAYD,IAahB,OACI,gCACI,cAACjH,EAAA,EAAD,CAAQ5H,QAASwN,EAAQ5O,QAAQ,WAAWW,MAAM,UAAlD,SACKoP,IAEL,cAACI,GAAA,EAAD,CAAQ5G,KAAM0G,EAASnG,QAAS8E,EAAQwB,OAAO,SAA/C,SAdJ,cAACC,GAAA,EAAD,CACIC,KAAK,eACLlP,QAASwN,EACT2B,UAAW3B,EAHf,SAKKoB,U,wCCdAQ,GAAoD,SAAC,GAAY,IAAX1M,EAAU,EAAVA,KAC/D,OAAQ,sBAAKpE,UAAU,cAAf,UACJ,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,cAACqN,GAAA,EAAD,CAAQC,IAAKlJ,EAAK4H,OAAO3L,KAAMkN,IAAKnJ,EAAK4H,OAAO1H,WAAYtE,UAAU,wCACtE,cAAC,IAAD,CAAMC,GAAE,mBAAcmE,EAAK4H,OAAO3H,IAAMrE,UAAU,kCAAlD,SAAqFoE,EAAK4H,OAAO3L,UAErG,gCAEJ,qBAAKkN,IAAKnJ,EAAKgJ,QAASE,IAAKlJ,EAAKgJ,UAClC,0BAASpN,UAAU,uBAAnB,UACA,oBAAGA,UAAU,qBAAb,oBAA0CoE,EAAK+G,eAC/C,sBAAKnL,UAAU,oBAAf,UAAmC,cAAC,IAAD,CAAMC,GAAE,mBAAcmE,EAAK4H,OAAO3H,IAAMrE,UAAU,wCAAlD,SAA2FoE,EAAK4H,OAAO3L,OACrI+D,EAAK+I,sBCsBH4D,GA/BiC,SAAC,GAA4B,IAA1B3M,EAAyB,EAAzBA,KAAO4M,EAAkB,EAAlBA,aACtD,EAAwBzQ,oBAAS,GAAjC,mBAAOsJ,EAAP,KAAaC,EAAb,KACQvG,EAAS1D,aAAY,SAACC,GAAD,OAAsBA,EAAMyE,eAAjDhB,KAOR,OACI,gCACA,sBAAKvD,UAAU,qBAAqB0B,QAPzB,WACXoI,GAASD,IAMT,UACI,qBAAK7J,UAAU,2BAA2BuN,IAAKnJ,EAAKgJ,QAASE,IAAI,OACjE,qBAAKtN,UAAU,6BAAf,SACI,sBAAKA,UAAU,uCAAf,UACI,sBAAKA,UAAU,kCAAf,UACI,mBAAGA,UAAU,mBACb,4BAAIoE,EAAK6M,oBAEb,sBAAKjR,UAAU,kCAAf,UACI,mBAAGA,UAAU,iBACb,4BAAIoE,EAAK+G,yBAKrB,cAAC,GAAD,CAAOpB,SAAUiH,EAAe,cAAC,GAAD,CAAkB5M,KAAMA,IAAU,cAAC,GAAD,CAAYA,KAAMA,EAAMb,KAAMA,EAAO4I,UAAU,IAAUtC,KAAMA,EAAMC,QAASA,EAAS/I,WAAW,EAAMkJ,SAAS,WCzBlLiH,GAA0D,WACnE,IAAMlJ,EAAUC,YAA2B,CACvCC,SAAUC,YAAYV,MAE1B,EAAsCO,EAAQwB,MAAM,CAAC,WAAY,0BAAjE,mBAAOhC,EAAP,KAAiBiC,EAAjB,KACMxF,EAAS8D,cAOjB,OACK,0BAAS/H,UAAU,QAAnB,UACI,sDACA,cAAC,IAAD,2BAAkBgI,GAAlB,aACI,uBACIkB,SAAUlB,EAAQmB,cAVhB,SAACvC,GACdF,QAAQC,IAAI,UACZ1C,EjBuFqB,SAAC2C,GAC1B,OAAO,SAAAZ,GACH,IACIb,GAAMf,KAAK,oBAAqBwC,GAC9BH,MACD,SAACX,GACEY,QAAQC,IAAIb,MACbsD,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAClC,MAAOA,GACLwF,QAAQC,IAAIzF,KiBhGTiQ,CAAcvK,OASV5G,UAAU,yCAFd,UAKI,cAAC,EAAD,CAAeI,MAAM,eAAeC,KAAK,WAAWC,QAAQ,aAC5D,cAAC,EAAD,CACIF,MAAM,mBACNC,KAAK,wBACLC,QAAQ,kBAEEqJ,IAAbnC,GAA0BA,IAAaiC,EAAoB,cAACH,EAAA,EAAD,CAAQtI,KAAK,SAASV,QAAQ,YAA9B,6BAEhD,cAACgJ,EAAA,EAAD,CAAQtI,KAAK,SAASV,QAAQ,YAAYwI,UAAQ,EAAlD,uC,UC9BlBsI,GAA0C,SAAC,GAAe,IAAdtH,EAAa,EAAbA,QAC/C7F,EAAS8D,cACRxE,EAAQ1D,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAAhDwD,KACP,EAAgChD,mBAAS,IAAzC,mBAAO8Q,EAAP,KAAiBC,EAAjB,KAsBF,OACC,sBAAKtR,UAAU,eAAf,UACC,8CACG,sBAAKA,UAAU,uBAAf,UACI,cAACqN,GAAA,EAAD,CAAQC,IAAK/J,EAAMlD,KAAMkN,IAAG,OAAEhK,QAAF,IAAEA,OAAF,EAAEA,EAAMe,WAAYqL,GAAI,CAAEC,MAAO,GAAIC,OAAQ,MACzE,sBAAK7P,UAAU,0BAAf,UACI,mBAAGA,UAAU,yBAAb,gBAAuCuD,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAMlD,OAC7C,wBAAOL,UAAU,+BAAjB,UACI,uBAAOgB,KAAK,OAAOuQ,OAAO,wBAAwBzD,SAlB5C,SAACL,GAKlBA,EAAMM,OAAOyD,OAASC,aAAiBhE,EAAMM,OAAOyD,MAAM,GAJ1C,CACZE,iBAAkB,IAClBC,cAAc,IAEqDlL,MAAK,SAACmL,GlB2F5D,IAACC,EkB1FdpE,EAAMM,OAAOyD,OAAUvN,GlB0FT4N,EkB1F0BD,ElB2FzC,SAAA5L,GACH,IACI,IAAM8L,EAAe,IAAIC,SACzBD,EAAaE,OAAO,SAAUH,GAC9B1M,GAAMf,KAAK,UAAW0N,EAAc,CAChCtL,OAAQ,CACJyL,QAAS,SAEbtM,QAAS,CACL,eAAgB,yBAEtBc,MAAK,SAACX,GACJY,QAAQC,IAAIb,EAASc,KAAKA,KAAKtC,YAC/B0B,EAAS,CACLhF,KAAMwB,EACN0B,QAAS4B,EAASc,KAAKA,KAAKtC,gBAEjC8E,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAGpC,MAAOA,GACHwF,QAAQC,IAAIzF,UkB/GbkI,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,SAUzB,yBAMR,kCACQ,uBACIgI,SAnCM,SAACuE,GlBqII,IAACpN,EkBpIvB4D,GlBoIuB5D,EkBpIDgR,ElBqInB,SAAArL,GACH,IACI,IAAMkM,EAAU,IAAIH,SACpBG,EAAQF,OAAO,OAAQ3R,GACvB8E,GAAMf,KAAK,UAAW8N,EAAS,CAC3B1L,OAAQ,CACJyL,QAAS,SAEbtM,QAAS,CACL,eAAgB,yBAEtBc,MAAK,SAACX,GACJ,IAAMqM,EAAkBrM,EAASc,KAAKA,KAAKvG,KAC3C2F,EAAS,CACLhF,KAAMyB,EACNyB,QAASiO,OAEd/I,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAGpC,MAAOA,GACHwF,QAAQC,IAAIzF,OkBzJhB4I,GAAQ,GACR2D,EAAM4B,kBAiCKrP,UAAU,wCAFd,UAII,cAACc,EAAA,EAAD,CAAWV,MAAM,WAAWC,KAAK,WAAWyB,YAAayB,EAAMlD,KAAMW,KAAK,OAAOV,QAAQ,WAAWwN,SAhC9F,SAACL,GAClB6D,EAAY7D,EAAMM,OAAOC,UAgCd,cAAC1E,EAAA,EAAD,CAAQtI,KAAK,SAASV,QAAQ,YAA9B,oC,6BCKJ8R,GAhD2C,SAAC,GAAyB,IAAxB/N,EAAuB,EAAvBA,GAAIgO,EAAmB,EAAnBA,KAAMvI,EAAa,EAAbA,QAElE,EAA0BvJ,mBAAwB,MAAlD,mBAAO+R,EAAP,KAAcC,EAAd,KAF+E,8CAI/E,uBAAAC,EAAA,sEACUrN,GAAMoB,IAAN,kBAAqBlC,EAArB,YAA2BgO,GAAQ,CACrC1M,QAAS,CACTgF,OAAQ,sBACRlE,MAAK,SAACX,GACN,IAAMwM,EAAQxM,EAASc,KAAKA,KAC5B2L,EAASD,MAEXlJ,OAAM,SAAAlI,GAAK,OAAIwF,QAAQC,IAAIzF,MARjC,2CAJ+E,wBAuB/E,OARA8N,qBAAU,WAGN,OAlB2E,mCAgB3EyD,GAEO,WACH3I,GAAQ,MAEb,IAGC,0BAAS9J,UAAU,gBAAnB,UACI,6BAAKqS,EAAKK,OAAO,GAAGC,cAAgBN,EAAKlD,MAAM,KAC/C,yBAASnP,UAAU,uBAAnB,SACKsS,EAAQA,EAAMnO,KAAI,SAAAZ,GAAI,OACnB,0BAAuBvD,UAAU,sBAAjC,UAEI,qBAAKA,UAAU,wBAAf,SACI,cAAC,IAAD,CAAMC,GAAE,mBAAcsD,EAAKc,IAA3B,SAAiC,cAACgJ,GAAA,EAAD,CAC7BC,IAAK/J,EAAKlD,KACVkN,IAAKhK,EAAKe,WACVqL,GAAI,CAAEC,MAAO,GAAIC,OAAQ,UAIjC,cAAC,IAAD,CAAM5P,GAAE,mBAAcsD,EAAKc,IAA3B,SAAkCd,EAAKlD,SAV7BkD,EAAKc,OAYlB,yBAASrE,UAAU,yBAAnB,SACD,cAACiO,GAAA,EAAD,YC3BP2E,GAAkC,WAC3C,IAAM3O,EAAS8D,cACT8K,EAAehT,aAAY,SAACC,GAAD,OAAsBA,EAAMC,KAAKwD,KAAMc,MACxE,EAA+DxE,aAAY,SAACC,GAAD,OAAsBA,EAAMyE,eAA/FhB,EAAR,EAAQA,KAAMG,EAAd,EAAcA,YAAaP,EAA3B,EAA2BA,MAAOE,EAAlC,EAAkCA,YAAaC,EAA/C,EAA+CA,YACvCe,EAAOyO,eAAPzO,GACR,EAAwB9D,oBAAS,GAAjC,mBAAOsJ,EAAP,KAAaC,EAAb,KACA,EAA8CvJ,oBAAS,GAAvD,mBAAOwS,EAAP,KAAwBC,EAAxB,KACA,EAAoCzS,oBAAS,GAA7C,mBAAO0S,EAAP,KAAmBC,EAAnB,KACA,EAAwB3S,mBAAe,aAAvC,mBAAO8R,EAAP,KAAac,EAAb,KAEAnE,qBAAU,WACN/K,EAAO2H,IAAe,IACtB3H,EdxBmB,SAACI,GACxB,OAAO,SAAA2B,GACH,IACIb,GAAMoB,IAAN,kBAAqBlC,GAAM,CACvBsB,QAAS,CACLgF,OAAQ,sBAEblE,MAAK,SAACX,GACL,IAAMvC,EAAOuC,EAASc,KAAKA,KAC3BZ,EAAS,CACLhF,KAAMoB,EACN8B,QAASX,OAEd6F,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,KcQTkS,CAAYC,OAAOhP,KAC1BJ,EAAOyH,GAAa2H,OAAOhP,GAAK,GAAI,MACrC,CAACA,IAEJ,IAMMiP,EAAc,WAChBrP,GpBWG,SAAA+B,GACHA,EAASM,IAAe,IACxB,IACInB,GAAMf,KAAK,YAAYqC,MAAK,WACxBT,EAAS,CACLhF,KAAMgB,OAEXoH,OAAM,SAAClI,GACNwF,QAAQC,IAAIzF,MAGpB,MAAOA,GACHwF,QAAQC,IAAIzF,QoBpBdqS,EAAa,WACfzJ,GAAQ,IAGN0J,EAAwB,WAC1BR,GAAmB,IAGjBS,EAAe,WACjBlQ,GAAQU,EdKU,SAACV,GACvB,OAAO,SAAAyC,GACH,IACIb,GAAM+F,KAAN,kBAAsB3H,EAAKc,GAA3B,YAAwCoC,MAAK,WACzClD,EAAKmQ,iBAAmBnQ,EAAKoQ,YAAc,EAAI,EAC/CpQ,EAAKoQ,YAAcpQ,EAAKoQ,WACxB3N,EAAS,CACLhF,KAAMuB,EACN2B,QAASX,OAEd6F,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MAClC,MAAOA,GACLwF,QAAQC,IAAIzF,KcjBD0S,CAAWrQ,KAGxBsQ,EAAmB,SAACC,GAClBvQ,IACEA,EAAKmQ,gBAAkB,GAAoB,cAAfI,GAC1BvQ,EAAKwQ,eAAiB,GAAoB,aAAfD,KAC/BX,EAAQW,GACRZ,GAAc,KAoCtB,OAAGxP,EACQ,qBAAK1D,UAAU,eAAf,SACH,cAACiO,GAAA,EAAD,CAAkBC,KAAM,OAIjC,sBAAKlO,UAAU,kBAAf,UACC,sBAAKA,UAAU,iBAAf,UACI,cAACqN,GAAA,EAAD,CACIC,IAAG,OAAE/J,QAAF,IAAEA,OAAF,EAAEA,EAAMlD,KACXkN,IAAG,OAAEhK,QAAF,IAAEA,OAAF,EAAEA,EAAMe,WACXqL,GAAI,CAAEC,MAAO,GAAIC,OAAQ,MAE7B,sBAAK7P,UAAU,uBAAf,UACKuD,GAAQ,4BAAIA,EAAMlD,OACnB,sBAAKL,UAAU,+BAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,mBAAGA,UAAU,4BAAb,gBAA0CuD,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAMyQ,cAChD,yCAEJ,sBAAKhU,UAAU,qBAAqB0B,QAAS,kBAAMmS,EAAiB,cAApE,UACI,mBAAG7T,UAAU,4BAAb,gBAA0CuD,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAMmQ,kBAChD,6CAEJ,sBAAK1T,UAAU,qBAAqB0B,QAAS,kBAAMmS,EAAiB,aAApE,UACI,mBAAG7T,UAAU,4BAAb,gBAA0CuD,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAMwQ,iBAChD,sDAKb,qBAAK/T,UAAU,kBAAf,SA7CI6S,IAAiBQ,OAAOhP,GACf,sBAAKrE,UAAU,kBAAf,UACJ,cAACsJ,EAAA,EAAD,CAAQhJ,QAAQ,WAAWoB,QAAS8R,EAApC,0BACA,cAAC,GAAD,CAAiBlD,KApBjB,eAAC2D,GAAA,EAAD,WACJ,eAACC,GAAA,EAAD,CAAUlE,QAAM,EAAhB,UACA,cAACmE,GAAA,EAAD,UAAc,mBAAGnU,UAAU,iBAC3B,cAACoU,GAAA,EAAD,CAAc1S,QAAS6R,EAAvB,gCAEA,eAACW,GAAA,EAAD,CAAUlE,QAAM,EAAhB,UACI,cAACmE,GAAA,EAAD,UAAc,mBAAGnU,UAAU,0BAC3B,cAACoU,GAAA,EAAD,CAAc1S,QAAS4R,EAAvB,yBAEJ,eAACY,GAAA,EAAD,CAAUlE,QAAM,EAAhB,UACI,cAACmE,GAAA,EAAD,UAAc,mBAAGnU,UAAU,0BAC3B,cAACoU,GAAA,EAAD,2BAS+B/D,YAAY,gBAIvC,qBAAKrQ,UAAU,kBAAf,UACC,OAAJuD,QAAI,IAAJA,OAAA,EAAAA,EAAMoQ,YAAa,cAACrK,EAAA,EAAD,CAAQhJ,QAAQ,WAAWoB,QAAS+R,EAApC,sBAAsE,cAACnK,EAAA,EAAD,CAAQhJ,QAAQ,WAAWoB,QAAS+R,EAApC,wBAwCnG,qBAAKzT,UAAU,gBAAf,SACKmD,GAASA,EAAMgB,KAAI,SAACC,GAAD,OAChB,cAAC,GAAD,CAAaA,KAAMA,EAAoB4M,cAAc,GAAvB5M,EAAKC,SAG1C,cAAC,GAAD,CAAOwF,KAAMA,EAAMC,QAASA,EAASC,SAAU,cAAC,GAAD,MAC/C,cAAC,GAAD,CAAOF,KAAMkJ,EAAiBjJ,QAASkJ,EAAoBjJ,SAAU,cAAC,GAAD,CAAaD,QAASkJ,MAC3FzP,GACG,cAAC,GAAD,CAAOsG,KAAMoJ,EAAYnJ,QAASoJ,EAAelJ,WAAW,QACrDD,SAAU,cAAC,GAAD,CAAkB1F,GAAId,EAAKc,GAAIgO,KAAMA,EAAMvI,QAASoJ,MAExE5P,GAAe,cAACgG,EAAA,EAAD,CAAQ5H,QA5GH,SAAC+L,GACrBA,EAAM4B,iBACN/L,GAAeW,EAAOyH,GAAanI,EAAMc,GAAIlB,EAAQE,EAAY,KA0GlD,oC,wEChIjBgR,GAAW,SAACC,GACd,IAAQvK,EAAqCuK,EAArCvK,SAAUiE,EAA2BsG,EAA3BtG,MAAOuG,EAAoBD,EAApBC,MAAUC,EAAnC,aAA6CF,EAA7C,IAEA,OACI,6CACI1D,KAAK,WACL6D,OAAQzG,IAAUuG,GACdC,GAHR,aAKKxG,IAAUuG,GACP,cAAC5D,GAAA,EAAD,CAAKhB,GAAI,CAAE+E,EAAG,GAAd,SACI,8BAAM3K,UAMb4K,GAAgC,WACzC,MAA0BpU,mBAAS,GAAnC,mBAAOyN,EAAP,KAAcyB,EAAd,KACA,EAA0BlP,mBAA6B,MAAvD,mBAAO4C,EAAP,KAAcqH,EAAd,KACA,EAA0BjK,mBAAwB,MAAlD,mBAAO+R,EAAP,KAAcC,EAAd,KACA,EAA8BhS,oBAAS,GAAvC,mBAAOsM,EAAP,KAAgBC,EAAhB,KAEM8H,EAAYC,cACd,SAACC,GACMA,EAAYC,QAAU,IACrBjI,GAAW,GACXpG,QAAQC,IAAImO,GACZ3P,GAAMoB,IAAI,UAAW,CACjBC,OAAQ,CACJ,KAAQsO,EACR,KAAQA,GAEZnP,QAAS,CACLgF,OAAQ,sBAEblE,MAAK,SAACX,GACLY,QAAQC,IAAIb,GACZ,IAAMkP,EAAalP,EAASc,KAAKA,KAAK0L,MAChC2C,EAAanP,EAASc,KAAKA,KAAKzD,MAEtCoP,EAASyC,GACTxK,EAASyK,GACTnI,GAAW,MACZ1D,OAAM,SAAAlI,GAAK,OAAIwF,QAAQC,IAAIzF,SAItC,KAOJ,OACD,sBAAKlB,UAAU,SAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAACc,EAAA,EAAD,CACIC,WAAS,EACTe,YAAY,SACZgM,SAAU,SAACoH,GAAD,OAAON,EAAUM,EAAEnH,OAAOC,QACpC1N,QAAQ,WACRe,WAAY,CACR8T,eACI,cAAC5T,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,mBAAGxB,UAAU,yBAMjC,qBAAKA,UAAU,kBAAf,SAEI,eAAC2Q,GAAA,EAAD,CAAKhB,GAAI,CAAEC,MAAO,QAAlB,UACI,cAACe,GAAA,EAAD,CAAKhB,GAAI,CAAEyF,aAAc,EAAGC,YAAa,WAAzC,SACI,eAACC,GAAA,EAAD,CAAMtH,MAAOA,EAAOF,SAzBX,SAACL,EAA6BsC,GAClDN,EAASM,IAwBE,UACI,cAACwF,GAAA,EAAD,CAAKnV,MAAM,UACX,cAACmV,GAAA,EAAD,CAAKnV,MAAM,eAGnB,cAAC,GAAD,CAAU4N,MAAOA,EAAOuG,MAAO,EAA/B,SACK1H,EAAU,qBAAK7M,UAAU,kBAAf,SAAiC,cAACiO,GAAA,EAAD,CAAkBC,KAAM,OAAeoE,GAASA,EAAMnO,KAAI,SAACZ,GAAD,OAClG,0BAAuBvD,UAAU,sBAAjC,UAEI,qBAAKA,UAAU,wBAAf,SACI,cAAC,IAAD,CAAMC,GAAE,mBAAcsD,EAAKc,IAA3B,SAAiC,cAACgJ,GAAA,EAAD,CAC7BC,IAAK/J,EAAKlD,KACVkN,IAAKhK,EAAKe,WACVqL,GAAI,CAAEC,MAAO,GAAIC,OAAQ,UAIjC,cAAC,IAAD,CAAM5P,GAAE,mBAAcsD,EAAKc,IAA3B,SAAkCd,EAAKlD,SAV7BkD,EAAKc,SAc3B,cAAC,GAAD,CAAU2J,MAAOA,EAAOuG,MAAO,EAA/B,SACK1H,EAAU,qBAAK7M,UAAU,kBAAf,SAAiC,cAACiO,GAAA,EAAD,CAAkBC,KAAM,OAAe/K,GAAS,qBAAKnD,UAAU,gBAAf,SAAgCmD,EAAMgB,KAAI,SAACC,GAAD,OAClI,cAAC,GAAD,CAAaA,KAAMA,EAAoB4M,cAAc,GAAvB5M,EAAKC,oB,wCClH7CmR,GAAoC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAQ/C,EAMIC,aAAY,CAACC,OAbF,SAACC,GACZA,EAAcC,SAAQ,SAACC,GACnBpP,QAAQC,IAAImP,GACZL,EAAQK,OAUSvE,OAAQ,mCAAoCwE,UAAU,EAC3EC,SAAU,IANVC,EADJ,EACIA,aACAC,EAFJ,EAEIA,cACAC,EAHJ,EAGIA,aACAC,EAJJ,EAIIA,aACAC,EALJ,EAKIA,aAaJ,OACQ,gDAASJ,KAAT,IAAyBjW,UAAU,WAAnC,UACI,qCAAWkW,MACX,mBAAGlW,UAAS,6BAXjBqW,EACQ,oBAERD,EACQ,yBADX,KASSA,GAAiB,mBAAGpW,UAAU,iBAAb,mCACjBqW,GAAiB,mBAAGrW,UAAU,iBAAb,oCAChBmW,GAAiB,mBAAGnW,UAAU,iBAAb,6BACnB,cAACsJ,EAAA,EAAD,CAAQhJ,QAAQ,YAAhB,qC,kBC7BHgW,GAAoC,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAASnS,EAAgB,EAAhBA,KAAM0R,EAAU,EAAVA,KACtDvS,EAAS1D,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAAjDwD,KACFiT,EAAe,SAAC/I,GAClB8I,EAAQ,2BACDnS,GADA,mBAEFqJ,EAAMM,OAAO1N,KAAOoN,EAAMM,OAAOC,UAW1C,OAPAgB,qBAAU,WACNuH,EAAQ,2BACDnS,GADA,IAEHqS,MAAOX,OAEZ,CAACA,IAGA,uBAAM9V,UAAU,YAAhB,UACI,qBAAKuN,IAAKmJ,IAAIC,gBAAgBb,GAAOxI,IAAI,YAAYtN,UAAU,oBAC/D,sBAAKA,UAAU,uBAAf,UACI,cAACqN,GAAA,EAAD,CAAQC,IAAI,KAAKC,IAAG,OAAEhK,QAAF,IAAEA,OAAF,EAAEA,EAAMe,aAC5B,4BAAIf,EAAMlD,UAEd,sBAAKL,UAAU,oBAAf,UAEI,cAACc,EAAA,EAAD,CACIC,WAAS,EACTX,MAAM,kBACNwW,WAAS,EACTC,QAAS,EACT7I,MAAK,OAAE5J,QAAF,IAAEA,OAAF,EAAEA,EAAM+I,YACbW,SAAU0I,EACVnW,KAAK,cACLL,UAAU,qBAEd,cAACc,EAAA,EAAD,CACIC,WAAS,EACTX,MAAM,OACN0B,YAAY,iBACZkM,MAAK,OAAE5J,QAAF,IAAEA,OAAF,EAAEA,EAAM0S,KACbhJ,SAAU0I,EACVnW,KAAK,OACLL,UAAU,4BC9BxB+W,GAAQ,CAAC,YAAa,eAEfC,GAAkC,WAC3C,IAAQzT,EAAS1D,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAAjDwD,KACAG,EAAgB7D,aAAY,SAACC,GAAD,OAAsBA,EAAMyE,eAAxDb,YAER,EAAwBnD,mBAAsB,MAA9C,mBAAOuV,EAAP,KAAaL,EAAb,KACA,EAAoClV,mBAAS,GAA7C,mBAAO0W,EAAP,KAAmBC,EAAnB,KACA,EAA4B3W,oBAAS,GAArC,mBAAe4W,GAAf,WACA,EAAwB5W,mBAAuB,CAC3CkW,MAAO,KACPtJ,YAAa,GACb2J,KAAM,KAHV,mBAAO1S,EAAP,KAAamS,EAAb,KAKMtS,EAAS8D,cACTqP,EAAWC,eAEjBrI,qBAAU,cACP,CAAC8G,EAAM1R,IAEV,IAKMkT,EAAgB,CAClB,CACKC,YAAczB,EAAuC,qBAAKvI,IAAKmJ,IAAIC,gBAAgBb,GAAOxI,IAAI,OAAO5L,QAP3F,WACfyV,GAAU,IAMqHnX,UAAU,oBAA/G,cAAC,GAAD,CAAUyV,QAASA,KAE7C,CACI8B,YAAa,cAAC,GAAD,CAAUhB,QAASA,EAASnS,KAAMA,EAAM0R,KAAMA,MAkB7D0B,EAAa,yCAAG,+BAAAhF,EAAA,sDAClBvO,EAAO2H,IAAe,IAChB6L,EAAQ,IAAI1F,SACZ2F,EAAU,CACZC,UAAW,EACXjG,iBAAkB,KAClBC,cAAc,GAElBmE,GAAQrE,aAAiBqE,EAAM4B,GAC1BjR,MAAK,SAACmL,GACHlL,QAAQC,IAAIiL,GACZ6F,EAAMzF,OAAO,QAASJ,GACtBxN,EAAK+I,aAAesK,EAAMzF,OAAO,cAAe5N,EAAK+I,aACrD/I,EAAK0S,MAAQW,EAAMzF,OAAO,OAAQ5N,EAAK0S,MAEvC3R,GAAMf,KAAN,UACIqT,EACA,CACI9R,QAAS,CACL,eAAgB,yBAG1Bc,MAAK,SAACmE,GACJlE,QAAQC,IAAIiE,EAAIhE,MAChBwQ,EAAS,YAAD,OAAa7T,EAAMc,KAC3BJ,EAAO2H,IAAe,OACvBxC,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,SACjCkI,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,MACpCwF,QAAQC,IAAIvC,EAAKqS,OA5BC,2CAAH,qDA+BnB,OAAG/S,EACQ,qBAAK1D,UAAU,oBAAf,SAAmC,cAACiO,GAAA,EAAD,CAAkBC,KAAM,OAIlE,sBAAMlO,UAAU,WAAhB,SACI,eAAC2Q,GAAA,EAAD,CAAKhB,GAAI,CAACC,MAAO,QAAjB,UACA,cAACgI,GAAA,EAAD,CAASX,WAAYA,EAAYY,kBAAgB,EAAjD,SACKd,GAAM5S,KAAI,SAAC/D,EAAOmU,GAKf,OACI,cAACuD,GAAA,EAAD,2BALuC,IAKvC,aACI,cAACC,GAAA,EAAD,2BAHJ,IAGI,aAA4B3X,OADrBA,QAMtB6W,IAAeF,GAAMhC,OAClB,eAAC,WAAD,WACI,cAACiD,GAAA,EAAD,CAAYrI,GAAI,CAAEsI,GAAI,EAAGC,GAAI,GAA7B,mDAGA,eAACvH,GAAA,EAAD,CAAKhB,GAAI,CAAEwI,QAAS,OAAQC,cAAe,MAAOC,GAAI,GAAtD,UACI,cAAC1H,GAAA,EAAD,CAAKhB,GAAI,CAAE2I,KAAM,cACjB,cAAChP,EAAA,EAAD,CAAQ5H,QAlER,WAChBwV,EAAc,IAiEE,yBAIR,eAAC,WAAD,WAGKI,EAAcL,GAAYM,YAC3B,eAAC5G,GAAA,EAAD,CAAKhB,GAAI,CAAEwI,QAAS,OAAQC,cAAe,MAAOC,GAAI,GAAtD,UACI,cAAC/O,EAAA,EAAD,CACIrI,MAAM,UACN6H,UAAWgN,GAAuB,IAAfmB,EACnBvV,QAASuV,IAAeF,GAAMhC,OAAS,EAlF5C,WACfmC,GAAc,SAACqB,GAAD,OAAoBA,EAAiB,MAOnC,WAChB9C,EAAQ,OA0EY9F,GAAI,CAAE6I,GAAI,GAJd,SAMKvB,IAAeF,GAAMhC,OAAS,EAAI,OAAS,iBAEhD,cAACpE,GAAA,EAAD,CAAKhB,GAAI,CAAE2I,KAAM,cACjB,cAAChP,EAAA,EAAD,CAAQ5H,QAASuV,IAAeF,GAAMhC,OAAS,EAAIyC,EA3FpD,WAAON,GAAc,SAACqB,GAAD,OAAoBA,EAAiB,MA2FsBzP,UAAWgN,EAA1F,SACKmB,IAAeF,GAAMhC,OAAS,EAAI,SAAW,qBCzI7D0D,GAAoC,SAAC,GAAQ,gBACtD,MAA8BlY,oBAAS,GAAvC,mBAAOsM,EAAP,KAAgBC,EAAhB,KACA,EAAwBvM,mBAA2B,MAAnD,mBAAO6D,EAAP,KAAamS,EAAb,KACQzW,EAAU4Y,eAAV5Y,MACFsX,EAAWC,eAEjBrI,qBAAU,WACN,IAAI2J,GAAY,EAQhB,OAPAxT,GAAMoB,IAAN,kBAAqBzG,EAAMuE,KAAMoC,MAAK,SAACX,GAC/B6S,IACApC,EAAQzQ,EAASc,KAAKA,MACtBkG,GAAW,OAIZ,WACH6L,GAAY,KAEjB,IAEH,IAAMnC,EAAe,SAAC/I,GAClBrJ,GAAQmS,EAAQ,2BACTnS,GADQ,mBAEVqJ,EAAMM,OAAO1N,KAAOoN,EAAMM,OAAOC,UAY1C,OAAGnB,EACQ,cAACoB,GAAA,EAAD,CAAkBC,KAAM,KAG3B,uBAAMlO,UAAU,YAAhB,UACJ,2CACA,qBAAKuN,IAAG,OAAEnJ,QAAF,IAAEA,OAAF,EAAEA,EAAMgJ,QAASE,IAAG,OAAElJ,QAAF,IAAEA,OAAF,EAAEA,EAAMgJ,UACpC,sBAAKpN,UAAU,kBAAf,UACI,cAACc,EAAA,EAAD,CACIC,WAAS,EACTX,MAAM,kBACNwW,WAAS,EACTC,QAAS,EACT7I,MAAO5J,EAAM+I,YAAN,OAAoB/I,QAApB,IAAoBA,OAApB,EAAoBA,EAAM+I,YAAc,GAC/C9M,KAAK,cACLL,UAAU,mBACV8N,SAAU0I,IAEd,cAAC1V,EAAA,EAAD,CACIC,WAAS,EACTX,MAAM,OACN0B,YAAY,iBACZkM,MAAO5J,EAAM0S,KAAN,OAAa1S,QAAb,IAAaA,OAAb,EAAaA,EAAM0S,KAAO,GACjCzW,KAAK,OACLL,UAAU,mBACV8N,SAAU0I,IAGd,cAAClN,EAAA,EAAD,CAAQ5H,QApCK,WACjByD,GAAMyT,IAAN,kBAAqB9Y,EAAMuE,IAAMD,GAAMqC,MAAK,WACxC2Q,EAAS,YAAD,cAAahT,QAAb,IAAaA,OAAb,EAAaA,EAAMoJ,eAC5BpE,OAAM,SAAClI,GAAD,OAAWwF,QAAQC,IAAIzF,OAiCGZ,QAAQ,YAAvC,iCCzDCuY,GAAsC,WACjD,IAAQjZ,EAAkBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAA1DH,cAGR,OADAoP,qBAAU,cAAU,IAElB,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAKhP,UAAU,kBAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,CACEqS,KAAK,IACLyG,QACE,cAAC,GAAD,UACI,cAAC,GAAD,QAIR,cAAC,KAAD,CACEzG,KAAK,UACLyG,QACE,cAAC,GAAD,UACE,cAAC,GAAD,QAIN,cAAC,KAAD,CACEzG,KAAK,UACLyG,QACE,cAAC,GAAD,UACE,cAAC,GAAD,QAIN,cAAC,KAAD,CACEzG,KAAK,QACLyG,QACE,cAAC,GAAD,UACE,cAAC,GAAD,QAIJ,cAAC,KAAD,CACIzG,KAAK,eACLyG,QACI,cAAC,GAAD,UACI,cAAC,GAAD,QAIZ,cAAC,KAAD,CACIzG,KAAK,UACLyG,QACI,cAAC,GAAD,UACI,cAAC,GAAD,QAIZ,cAAC,KAAD,CACIzG,KAAK,WACLyG,QACI,cAAC,GAAD,UACI,cAAC,GAAD,QAIZ,cAAC,KAAD,CACIzG,KAAK,YACLyG,QACI,cAAC,GAAD,UACI,cAAC,GAAD,aAQflZ,GAAiB,cAAC,GAAD,Q,mBC7EXmZ,OAVf,WACE,OACE,cAAC,IAAD,CAAUpU,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAakI,QAAS,KAAM7H,UAAWA,GAAvC,SACE,cAAC,GAAD,SCTRgU,IAASpQ,OACP,cAAC,IAAMqQ,WAAP,UACE,cAAC,GAAD,MAEF3O,SAAS4O,eAAe,U","file":"static/js/main.97b10a24.chunk.js","sourcesContent":["import React from \"react\";\nimport InstagramIcon from \"@mui/icons-material/Instagram\";\nimport \"App.scss\";\n\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"store\";\nimport {Link} from 'react-router-dom';\n\n\ninterface NavbarProps {}\n\nexport const Navbar: React.FC<NavbarProps> = () => {\n  const { authenticated } = useSelector((state: RootState) => state.auth);\n  return (\n    <div className=\"navbar\">\n      {authenticated ? (\n        <div className=\"nav-content\">\n          <Link to=\"/home\" className=\"insta-logo\">Instakilogram</Link>\n\n          <div className=\"nav-icons\">\n            <Link to=\"/addPost\"><i className=\"far fa-plus-square\"/></Link>\n            {/*<i className=\"far fa-heart\"/>*/}\n\n          </div>\n        </div>\n      ) : (\n        <div className=\"nav-content\">\n          <p className=\"insta-logo\">Instakilogram</p>\n          <InstagramIcon fontSize=\"large\" />\n        </div>\n      )}\n    </div>\n  );\n};\n","import VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport {IconButton, InputAdornment, TextField} from \"@mui/material\";\nimport React, {useState} from \"react\";\nimport {useFormContext} from \"react-hook-form\";\n\ninterface PasswordInputProps {\n  label: string;\n  name: string;\n  variant: \"standard\" | \"filled\" | \"outlined\";\n}\n\nexport const PasswordInput: React.FC<PasswordInputProps> = ({\n  label,\n  name,\n  variant,\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const toggle = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const {\n    register,\n    formState: { errors },\n  } = useFormContext();\n  return (\n    <TextField\n      {...register(name)}\n      label={label}\n      name={name}\n      fullWidth\n      type={showPassword ? \"text\" : \"password\"}\n      color=\"primary\"\n      variant={variant}\n      error={!!errors[name]}\n      helperText={errors[name] ? errors[name]?.message : \"\"}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"start\">\n            <IconButton onClick={toggle}>\n              {showPassword ? (\n                <VisibilityIcon style={{ fill: \"#989898\" }} />\n              ) : (\n                <VisibilityOffIcon style={{ fill: \"#989898\" }} />\n              )}\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n","import TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { useFormContext } from \"react-hook-form\";\n\ninterface TextInputProps {\n  label: string;\n  name: string;\n  placeholder: string;\n  type: string;\n  variant: \"standard\" | \"filled\" | \"outlined\";\n}\n\nexport const TextInput: React.FC<TextInputProps> = ({\n  label,\n  name,\n  placeholder,\n  type,\n  variant,\n}) => {\n  const {\n    register,\n    formState: { errors },\n  } = useFormContext();\n  return (\n    <TextField\n      {...register(name)}\n      label={label}\n      name={name}\n      placeholder={placeholder}\n      fullWidth\n      type={type}\n      color=\"primary\"\n      variant={variant}\n      error={!!errors[name]}\n      helperText={errors[name] ? errors[name]?.message : \"\"}\n    />\n  );\n};\n","import { User } from 'models/UserModel';\nimport { PostModel } from 'models/PostModel';\n\nexport const SIGN_UP = \"SIGN_UP\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const SIGN_IN_SOCIAL = \"SIGN_IN_SOCIAL\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const RESET_AUTH = \"RESET_AUTH\";\n\nexport const GET_USER_BY_ID = \"GET_USER_BY_ID\";\nexport const GET_USER_POSTS = \"GET_USER_POSTS\";\nexport const LIKE_USER_POST = \"LIKE_USER_POST\";\nexport const ADD_USER_COMMENT = \"ADD_USER_POST\";\nexport const FOLLOW_USER = \"FOLLOW_USER\";\nexport const SET_AVATAR = \"SET_AVATAR\";\nexport const SET_NAME = \"SET_NAME\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const SET_LOADING_USER = \"SET_LOADING_USER\";\n\n\nexport const SET_POSTS = \"SET_POSTS\";\nexport const LIKE_POST = \"LIKE_POST\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const DELETE_POST_COMMENT = \"DELETE_POST_COMMENT\";\nexport const DELETE_USER_COMMENT = \"DELETE_USER_COMMENT\";\nexport const SET_LOADING_POST = \"SET_LOADING_POST\";\n\n// ----AUTHENTICATION----\n\ninterface SetUserAction {\n    type: typeof SIGN_UP,\n    payload: {\n        user: User,\n        token: string\n    }\n}\n\ninterface SignOutAction {\n    type: typeof SIGN_OUT,\n}\n\ninterface ResetAction {\n    type: typeof RESET_AUTH,\n}\n\ninterface SignInSocialAction {\n    type: typeof SIGN_IN_SOCIAL,\n    //payload: string;\n}\n\n// ----USER ACTIONS ----\n\ninterface GetUserByIdAction{\n    type: typeof GET_USER_BY_ID,\n    payload: User\n}\n\ninterface GetUserPosts{\n    type: typeof GET_USER_POSTS,\n    payload: {\n        posts: PostModel[],\n        currentPage: number,\n        hasNextPage: boolean,\n    }\n}\n\ninterface FollowUserAction{\n    type: typeof FOLLOW_USER,\n    payload: User\n}\n\ninterface SetAvatarAction {\n    type: typeof SET_AVATAR,\n    payload: string;\n}\n\ninterface SetNameAction {\n    type: typeof SET_NAME,\n    payload: string;\n}\n\ninterface LikeUserPostAction{\n    type: typeof  LIKE_USER_POST,\n    payload: PostModel\n}\n\ninterface AddUserComment{\n    type: typeof ADD_USER_COMMENT,\n    payload: PostModel\n}\n\ninterface DeletePostAction {\n    type: typeof DELETE_POST,\n    payload: number\n}\n\ninterface SetLoadingUserAction{\n    type: typeof SET_LOADING_USER,\n    payload: boolean;\n}\n\n\n\n// ----POST----\n\ninterface SetPostsAction {\n    type: typeof SET_POSTS,\n    payload: {\n        posts: PostModel[],\n        currentPage: number,\n        hasNextPage: boolean,\n    }\n}\n\n\ninterface LikePostAction{\n    type: typeof LIKE_POST,\n    payload: PostModel\n}\n\ninterface AddCommentAction{\n    type: typeof ADD_COMMENT,\n    payload: PostModel\n}\n\ninterface DeletePostCommentAction{\n    type: typeof DELETE_POST_COMMENT,\n    payload: PostModel\n}\n\ninterface DeleteUserCommentAction{\n    type: typeof DELETE_USER_COMMENT,\n    payload: PostModel\n}\n\ninterface SetLoadingPostAction{\n    type: typeof SET_LOADING_POST,\n    payload: boolean;\n}\n\n\n// ----STATE----\n\ninterface SetLoadingAction {\n    type: typeof SET_LOADING,\n    payload: boolean\n}\n\n\nexport type AuthActionsTypes = SetUserAction | SignOutAction | SignInSocialAction | SetLoadingAction | SetAvatarAction\n    | SetNameAction | ResetAction;\n\nexport type  UserActionTypes = GetUserByIdAction | FollowUserAction | SetAvatarAction\n    | SetNameAction | DeleteUserCommentAction | GetUserPosts | LikeUserPostAction | AddUserComment | DeletePostAction | SetLoadingUserAction;\n\nexport type PostActionsTypes = SetPostsAction | LikePostAction | AddCommentAction\n    | DeletePostCommentAction | SetLoadingPostAction;","import {PostState} from \"models/PostModel\";\nimport {\n    ADD_COMMENT,\n    DELETE_POST_COMMENT,\n    LIKE_POST,\n    PostActionsTypes,\n    SET_LOADING_POST,\n    SET_POSTS\n} from \"store/types/types\";\n//import update from 'react-addons-update';\n\n\nconst initialState: PostState = {\n    posts: null,\n    postLoading: false,\n    currentPage: 0,\n    hasNextPage: true\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = initialState, action: PostActionsTypes) => {\n    switch(action.type){\n        case SET_LOADING_POST:\n            return {\n                ...state,\n                postLoading: action.payload\n            }\n        case SET_POSTS:\n            return {\n                ...state,\n                posts: action.payload.posts,\n                currentPage: action.payload.currentPage,\n                hasNextPage: action.payload.hasNextPage,\n                postLoading: false,\n            }\n        case LIKE_POST:\n        case ADD_COMMENT:\n        case DELETE_POST_COMMENT:\n            return {\n                ...state,\n                posts: state.posts!.map(post => post.id === action.payload.id ? action.payload : post),\n            }\n        default:\n            return state;\n\n    }\n }\n\n","import {AuthState} from \"models/Authentication\";\nimport {\n    AuthActionsTypes,\n    RESET_AUTH,\n    SET_AVATAR,\n    SET_LOADING,\n    SET_NAME,\n    SIGN_IN_SOCIAL,\n    SIGN_OUT,\n    SIGN_UP\n} from \"store/types/types\";\n\n\nexport const initialState: AuthState = {\n    user: null,\n    authenticated: false,\n    token: '',\n    authLoading: false\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = initialState, action: AuthActionsTypes) => {\n    switch(action.type){\n        case SET_LOADING:\n            return {\n                ...state,\n                authLoading: action.payload,\n            }\n        case SIGN_UP:\n            return {\n                ...state,\n                user: action.payload.user,\n                token: action.payload.token,\n                authenticated: true,\n                authLoading: false,\n            }\n        case RESET_AUTH:\n        case SIGN_OUT:\n            return {\n                ...state,\n                token: '',\n                authenticated: false,\n                user: null,\n                authLoading: false,\n            }\n        case SIGN_IN_SOCIAL:\n            return {\n                ...state,\n                authLoading: false,\n            }\n        case SET_AVATAR:\n            return {\n                ...state,\n                user: state.user && {\n                    ...state.user,\n                    avatar_url: action.payload,\n                },\n            }\n        case SET_NAME:\n            return {\n                ...state,\n                user: state.user && {\n                    ...state.user,\n                    name: action.payload,\n                },\n            }\n        default:\n            return state;\n        \n    }\n }","import {UserState} from \"models/UserModel\";\nimport {\n    DELETE_POST,\n    DELETE_USER_COMMENT,\n    FOLLOW_USER,\n    GET_USER_BY_ID,\n    GET_USER_POSTS,\n    LIKE_USER_POST,\n    SET_AVATAR,\n    SET_LOADING_USER,\n    UserActionTypes\n} from \"../types/types\";\n\nconst initialState: UserState = {\n    user: null,\n    posts: null,\n    userLoading: false,\n    currentPage: 0,\n    hasNextPage: true,\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = initialState, action: UserActionTypes) => {\n    switch (action.type) {\n        case SET_LOADING_USER:\n            return{\n                ...state,\n                userLoading: action.payload\n            }\n        case GET_USER_BY_ID:\n            return {\n                ...state,\n                user: action.payload,\n                posts: action.payload.posts,\n                userLoading: false,\n            }\n        case GET_USER_POSTS:\n            return {\n                ...state,\n                posts: action.payload.posts,\n                currentPage: action.payload.currentPage,\n                hasNextPage: action.payload.hasNextPage,\n            }\n        case FOLLOW_USER:\n            return {\n                ...state,\n                user: action.payload,\n                userLoading: false,\n            }\n        case SET_AVATAR:\n            return {\n                ...state,\n                user: state.user && {\n                    ...state.user,\n                    avatar_url: action.payload,\n                },\n                userLoading: false,\n            }\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts!.filter(post => post.id !== action.payload),\n                userLoading: false\n            }\n        case LIKE_USER_POST:\n        case DELETE_USER_COMMENT:\n            return {\n                ...state,\n                posts: state.posts!.map(post => post.id === action.payload.id ? action.payload : post),\n            }\n        default:\n            return state;\n    }\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport postReducer from './reducers/postReducer';\nimport authReducer from './reducers/authReducer';\nimport { persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport persistReducer from 'redux-persist/es/persistReducer';\nimport userReducer from \"./reducers/userReducer\";\n\nexport const persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['auth']\n}\n\nconst rootReducer = combineReducers({\n    posts: postReducer,\n    auth: authReducer,\n    userReducer: userReducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n    persistedReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst persistor = persistStore(store);\n\nexport { store, persistor }\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import axios, {AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {store} from '../store';\nimport {RESET_AUTH} from \"../store/types/types\"\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nconst axiosCustom = axios.create({\n    baseURL: baseURL\n})\n\naxiosCustom.interceptors.request.use(function (req: AxiosRequestConfig) {\n    req.headers!.authorization = `Bearer ${store.getState().auth.token}`;\n    return req;\n})\n\naxiosCustom.interceptors.response.use(function (response :AxiosResponse) {return response;\n}, function (error) {\n    if(error.response.status === 401) {\n        store.dispatch({type: RESET_AUTH});\n    }\n    return Promise.reject(error);\n});\n\nexport default axiosCustom;","import axios from \"utils/axiosInstance\";\nimport {passwordResetData, signInData, signUpData} from \"models/Authentication\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {RootState} from \"store\";\nimport {AuthActionsTypes, RESET_AUTH, SET_AVATAR, SET_LOADING, SET_NAME, SIGN_OUT, SIGN_UP} from \"store/types/types\";\n//import {passwordChange} from\n\n\nexport const signUp = (data: signUpData): ThunkAction<void, RootState, null, AuthActionsTypes> => {\n    return dispatch => {\n        dispatch(setLoadingAuth(true));\n        try{\n           axios.post('./register', data\n           ).then\n           ((response: any) => {\n            const user = response.data.data.user;\n            const token = response.data.data.token;\n\n            dispatch({\n                type: SIGN_UP,\n                payload: {\n                    user,\n                    token\n                }\n            })\n           }).catch((error) => console.log(error))\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const signIn = (data: signInData): ThunkAction<void, RootState, null, AuthActionsTypes> => {\n    return dispatch => {\n        dispatch(setLoadingAuth(true));\n        try{\n           axios.post('/login', data\n           ).then\n           ((response) => {\n               console.log(response)\n\n                const user = response.data.data.user;\n                const token = response.data.data.token;\n\n                dispatch({\n                    type: SIGN_UP,\n                    payload: {\n                        user,\n                        token\n                    }\n                })\n            //setLoading(false);\n           }).catch((error) => console.log(error))\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const signOut = (): ThunkAction<void, RootState, null, AuthActionsTypes> => {\n    return dispatch => {\n        dispatch(setLoadingAuth(true));\n        try{\n            axios.post('./logout').then(() => {\n                dispatch({\n                    type: SIGN_OUT\n                })\n            }).catch((error) => {\n                console.log(error)\n            })\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const signInSocial = (passedToken: string, social: \"google\" | \"github\"): ThunkAction<void, RootState, null, AuthActionsTypes> => {\n    return dispatch => {\n        dispatch(setLoadingAuth(true));\n        try{\n            axios.get(`./login/${social}/callback`,\n                {\n                    params: {\n                        token: passedToken\n                    }\n                }).then((response) => {\n                    console.log(response)\n                    const user = response.data.data.user;\n                    const token = response.data.data.token;\n                    console.log(token);\n                    dispatch({\n                        type: SIGN_UP,\n                        payload: {\n                            user,\n                            token\n                        }\n                    })\n                console.log(response.data.data);\n            })\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\n\nexport const passwordReset = (data: passwordResetData): ThunkAction<void, RootState, null, AuthActionsTypes> => {\n    return dispatch => {\n        try {\n            axios.post('./password-change', data\n            ).then\n            ((response: any) => {\n                console.log(response);\n            }).catch((error) => console.log(error))\n        } catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const setAvatar = (loadedFile: File): ThunkAction<void, RootState, null, AuthActionsTypes> => {\n    return dispatch => {\n        try{\n            const loadedAvatar = new FormData();\n            loadedAvatar.append('avatar', loadedFile);\n            axios.post('./users', loadedAvatar, {\n                params: {\n                    _method: 'patch',\n                },\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }}\n            ).then((response) => {\n                console.log(response.data.data.avatar_url);\n                dispatch({\n                    type: SET_AVATAR,\n                    payload: response.data.data.avatar_url\n                });\n            }).catch((error) => console.log(error));\n\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const changeUsername = (name: string): ThunkAction<void, RootState, null, AuthActionsTypes> => {\n    return dispatch => {\n        try{\n            const newName = new FormData();\n            newName.append('name', name);\n            axios.post('./users', newName, {\n                params: {\n                    _method: 'patch',\n                },\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }}\n            ).then((response) => {\n                const changedUsername = response.data.data.name;\n                dispatch({\n                    type: SET_NAME,\n                    payload: changedUsername\n                });\n            }).catch((error) => console.log(error));\n\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\n\n\n\n\nexport const setLoadingAuth = (loadingValue: boolean): ThunkAction<void, RootState, null, AuthActionsTypes> => {\n    return dispatch => {\n        try {\n            dispatch({\n                type: SET_LOADING,\n                payload: loadingValue\n            });\n        } catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const resetAuth = (): ThunkAction<void, RootState, null, AuthActionsTypes> => {\n        return dispatch => {\n            try {\n                dispatch({\n                    type: RESET_AUTH,\n                });\n            } catch (error: any) {\n                console.log(error);\n            }\n        }\n    }\n\n\n\n","import * as yup from \"yup\";\n\nconst REGEX_PASSWORD =\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,15}$/;\n\nconst passwordConfirmationValidation = yup\n    .string()\n    .required(\"Password is required\")\n    .min(6, \"Password is too short\")\n    .max(15, \"Password is too long\")\n    .matches(REGEX_PASSWORD, \"Password does not meet requirements.\");\n\nconst passwordValidation = yup\n    .string()\n    .required(\"You need to confirm your password\")\n    .min(6, \"Password is too short\")\n    .max(15, \"Password is too long\")\n    .matches(REGEX_PASSWORD, \"Password does not meet requirements.\");\n\nconst validationCredentials = {\n  email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: passwordValidation,\n};\n\nexport const passwordSchema = yup.object().shape({\n  password: passwordValidation,\n  password_confirmation: passwordConfirmationValidation\n      });\n\nexport const signUpSchema = yup.object().shape({...validationCredentials,  password_confirmation: passwordConfirmationValidation,\n  name: yup.string()\n      .required(\"Name required\")\n      .min(6, \"Name is too short\")\n      .max(15, \"Name is too long\"\n)});\n\nexport const signInSchema = yup.object().shape(validationCredentials);","import {yupResolver} from \"@hookform/resolvers/yup\";\nimport Button from \"@mui/material/Button\";\nimport \"App.scss\";\nimport {PasswordInput} from \"components/PasswordInput\";\nimport {TextInput} from \"components/TextInput\";\nimport {signInData} from \"models/Authentication\";\nimport React from \"react\";\nimport {FormProvider, useForm} from \"react-hook-form\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"store\";\nimport {signIn, signInSocial} from \"store/actions/authActions\";\nimport {signInSchema} from \"./ValidationSchema\";\nimport {Link} from \"react-router-dom\";\nimport GoogleLogin from 'react-google-login';\n// @ts-ignore\nimport LoginGithub from 'react-login-github';\n\ninterface SignInProps {}\n\nexport const SignIn: React.FC<SignInProps> = () => {\n    const {authLoading} = useSelector((state:RootState) => state.auth);\n  const action = useDispatch();\n  const methods = useForm<signInData>({\n    resolver: yupResolver(signInSchema),\n  });\n  const onSubmit = (data: signInData) => {\n    action(signIn(data));\n  };\n\n  const responseGoogle = (response: any) => {\n    console.log(response);\n    action(signInSocial(response.accessToken, \"google\"));\n  }\n\n  const onSuccess = (response: any) => {\n    console.log(response);\n    action(signInSocial(response.code, \"github\"));\n  }\n\n  const onFailure = (response: any) => console.error(response);\n\n  return (\n    <div className=\"auth__wrapper\">\n      <div className=\"auth__header\">\n        <h1>Log in</h1>\n        <p>Sign up with one of following options.</p>\n      </div>\n      <div className=\"social-auth-container\">\n        <GoogleLogin\n            className=\"social-auth-container-button\"\n            clientId={String(process.env.REACT_APP_GOOGLE_CLIENT_ID)}\n            onSuccess={responseGoogle}\n            onFailure={responseGoogle}\n            buttonText=\"Google\"\n            tag='button'\n            render={renderProps => (\n                <button className=\"social-auth-container-button social-auth-container-button-google\"\n                        onClick={renderProps.onClick}\n                        disabled={renderProps.disabled}>\n                  <i className=\"fab fa-google  social-auth-container-button-icon\" /></button>\n            )}\n            icon={false}\n\n            cookiePolicy={'single_host_origin'}\n        />\n        <LoginGithub clientId={process.env.REACT_APP_GITHUB_CLIENT_ID}\n                     className=\"social-auth-container-button social-auth-container-button-github\"\n                     onSuccess={onSuccess}\n                     buttonText={<i className=\"fab fa-github social-auth-container-button-icon\"/>}\n                     onFailure={onFailure}/>\n      </div>\n      <FormProvider {...methods}>\n        <form\n          onSubmit={methods.handleSubmit(onSubmit)}\n          className=\"form form-sign-in\"\n        >\n          <TextInput\n            label=\"Email\"\n            name=\"email\"\n            placeholder=\"email@email.com\"\n            type=\"email\"\n            variant=\"outlined\"\n          />\n          <PasswordInput label=\"Password\" name=\"password\" variant=\"outlined\" />\n          {authLoading ? (\n            <Button variant=\"outlined\" color=\"primary\" disabled>\n                Loading...\n            </Button>\n          ) : (\n            <Button type=\"submit\" variant=\"contained\">\n              Sign In\n            </Button>\n          )}\n\n\n        </form>\n        <div className=\"auth__footer\">\n        <p>Don't have an account? </p>\n        <Link to=\"/signup\">Sign up</Link>\n      </div>\n      </FormProvider>\n    </div>\n  );\n};\n","import { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@mui/material/Button\";\nimport { PasswordInput } from \"components/PasswordInput\";\nimport { TextInput } from \"components/TextInput\";\nimport { signUpData } from \"models/Authentication\";\nimport React from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { signUpSchema } from \"./ValidationSchema\";\nimport \"App.scss\";\nimport { useDispatch } from \"react-redux\";\nimport { signUp } from \"store/actions/authActions\";\nimport {Link} from \"react-router-dom\";\n\ninterface SignUpProps {}\n\nexport const SignUp: React.FC<SignUpProps> = () => {\n  const action = useDispatch();\n  const methods = useForm<signUpData>({\n    resolver: yupResolver(signUpSchema),\n  });\n  const [password, confirmedPassword] = methods.watch(['password' ,'password_confirmation']);\n  const onSubmit = (data: signUpData) => {\n    action(signUp(data));\n  };\n  return (\n    <div className=\"auth__wrapper\">\n      <div className=\"auth__header\">\n        <h1>Sign up</h1>\n      </div>\n\n      <FormProvider {...methods}>\n        <form\n          onSubmit={methods.handleSubmit(onSubmit)}\n          className=\"form form-sign-up\"\n        >\n          <TextInput\n            label=\"Username\"\n            name=\"name\"\n            placeholder=\"Username\"\n            type=\"text\"\n            variant=\"outlined\"\n          />\n          <TextInput\n            label=\"Email\"\n            name=\"email\"\n            placeholder=\"email@email.com\"\n            type=\"email\"\n            variant=\"outlined\"\n          />\n          <PasswordInput label=\"Password\" name=\"password\" variant=\"outlined\" />\n          <PasswordInput\n            label=\"Confirm Password\"\n            name=\"password_confirmation\"\n            variant=\"outlined\"\n          />\n          {password !== undefined && password === confirmedPassword ? <Button type=\"submit\" variant=\"contained\">\n            Sign up\n          </Button> : <Button type=\"submit\" variant=\"contained\" disabled>\n            Sign up\n          </Button>}\n        </form>\n      </FormProvider>\n\n      <span className=\"auth__footer\">\n        <p>Already have an account? </p>\n        <Link to=\"/signin\" className=\"sign-in__footer__link\">Sign in</Link>\n      </span>\n    </div>\n  );\n};\n","import Dialog from '@mui/material/Dialog';\nimport React, {Dispatch, FC, SetStateAction} from 'react';\nimport {createPortal} from \"react-dom\";\nimport \"App.scss\";\n\n\ninterface ModalProps {\n    open: boolean;\n    setOpen:  Dispatch<SetStateAction<boolean>>;\n    children: JSX.Element;\n    scrollType?: \"paper\" | \"body\";\n    maxWidth?: \"xl\" | \"md\" | \"sm\" | \"xs\" | \"lg\" | false;\n    fullWidth?: boolean;\n}\n\nexport const Modal: FC<ModalProps> = ({ open, setOpen, children, scrollType, maxWidth, fullWidth}) => {\n    const handleClose = () => {\n        setOpen(false);\n    };\n    return createPortal((\n      <Dialog\n          open={open}\n          onClose={handleClose}\n          scroll={scrollType ? scrollType : \"body\"}\n          className=\"modal\"\n          maxWidth={maxWidth}\n          fullWidth={fullWidth}\n      >\n          {children}\n      </Dialog>\n    ), document.body);\n }","import {\n    ADD_COMMENT,\n    DELETE_POST_COMMENT,\n    LIKE_POST,\n    PostActionsTypes,\n    SET_LOADING_POST,\n    SET_POSTS\n} from \"store/types/types\";\nimport {RootState} from \"store\";\nimport {ThunkAction} from \"redux-thunk\";\nimport axios from \"utils/axiosInstance\";\nimport {PostModel} from \"models/PostModel\";\nimport {Comment} from \"../../models/CommentModel\";\n\n\nexport const setPosts = (page: number, passedPosts: PostModel[]): ThunkAction<void, RootState, null, PostActionsTypes> => {\n    return dispatch => {\n        try{axios.get(\"./posts\", {\n                params: {\n                    page\n                },\n                headers: {\n                  Accept: \"application/json\",\n                },\n              }).then((res)  => {\n            //TODO sprawdzic czy nie ma bledu z passedPosts\n                  const posts = [...passedPosts, ...res.data.data.data];\n                  const hasNextPage = Boolean(res.data.data.next_page_url);\n                  const currentPage = res.data.data.current_page;\n                  console.log(hasNextPage);\n\n                  console.log(res.data.data.next_page_url);\n                  console.log(res.data.data);\n                  dispatch({\n                      type: SET_POSTS,\n                      payload: {\n                          posts,\n                          currentPage,\n                          hasNextPage,\n                      }\n                  })\n              }).catch((error) => console.log(error));\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n        finally {\n            setLoadingPost(false);\n        }\n    }\n}\n\nexport const likePost = (post: PostModel): ThunkAction<void, RootState, null, PostActionsTypes> => {\n    return dispatch => {\n        try{\n            axios.head(`/posts/${post.id}/like`, {\n                headers: {\n                    Accept: \"application/json\",\n                },\n            }).then(()  => {\n                post.likes_count += post.isLiked ? -1 : 1;\n                post.isLiked = !post.isLiked;\n                dispatch({\n                    type: LIKE_POST,\n                    payload: post\n                })\n            }).catch((error) => console.log(error))\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const addComment = (comment: string, post: PostModel, setLoading: React.Dispatch<React.SetStateAction<boolean>>): ThunkAction<void, RootState, null, PostActionsTypes> => {\n    return dispatch => {\n        try{\n            axios.post(\"./comments\", {content: comment, post_id: post.id}, {\n\n            }).then((response) => {\n                console.log(response);\n                const location = response.data.data.location;\n                axios.get(`.${location}`).then((response) => {\n                    post.comments.push(response.data.data);\n                    console.log(response);\n                    dispatch({\n                        type: ADD_COMMENT,\n                        payload: post\n                    })\n                    setLoading(false);\n                }).catch((error) => console.log(error))\n            }).catch((error) => console.log(error));\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const deletePostComment = (post: PostModel, comment: Comment): ThunkAction<void, RootState, null, PostActionsTypes> => {\n    return dispatch => {\n        try{\n            console.log(comment.id);\n            axios.delete(`./comments/${comment.id}`\n            ).then((response) => {\n                console.log(response);\n                const comments = post.comments.filter((com) => com.id !== comment.id);\n                console.log(comments);\n                dispatch({\n                    type: DELETE_POST_COMMENT,\n                    payload: {\n                        ...post,\n                        comments\n                    },\n                })\n            }).catch((error) => console.log(error));\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const setLoadingPost = (loadingValue: boolean): ThunkAction<void, RootState, null, PostActionsTypes> => {\n    return dispatch => {\n        try{\n            dispatch({\n                type: SET_LOADING_POST,\n                payload: loadingValue\n            });\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}","import {ThunkAction} from \"redux-thunk\";\nimport {RootState} from \"../index\";\nimport {\n    DELETE_USER_COMMENT,\n    FOLLOW_USER,\n    GET_USER_BY_ID,\n    GET_USER_POSTS,\n    UserActionTypes, LIKE_USER_POST, ADD_USER_COMMENT, DELETE_POST, SET_LOADING_USER\n} from \"../types/types\";\nimport axios from \"utils/axiosInstance\";\nimport {User} from \"../../models/UserModel\";\nimport {PostModel} from \"../../models/PostModel\";\nimport {Comment} from \"../../models/CommentModel\";\n\n\n\nexport const getUserById = (id: number): ThunkAction<void, RootState, null, UserActionTypes> => {\n    return dispatch => {\n        try{\n            axios.get(`./users/${id}`, {\n                headers: {\n                    Accept: \"application/json\",\n                },\n            }).then((response) => {\n                const user = response.data.data;\n                dispatch({\n                    type: GET_USER_BY_ID,\n                    payload: user as User\n                })\n            }).catch((error) => console.log(error))\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const getUserPosts = (id: number, passedPosts: PostModel[], page: number): ThunkAction<void, RootState, null, UserActionTypes> => {\n    return dispatch => {\n        try{\n            axios.get(`./users/${id}/posts`, {\n                params:{\n                    page\n                },\n                headers: {\n                    Accept: \"application/json\",\n                },\n            }).then((res) => {\n                //TODO sprawdzic czy nie ma bledu\n                const posts = [...passedPosts, ...res.data.data.data];\n                const hasNextPage = Boolean(res.data.data.next_page_url);\n                const currentPage = res.data.data.current_page;\n                dispatch({\n                    type: GET_USER_POSTS,\n                    payload: {\n                        posts,\n                        currentPage,\n                        hasNextPage\n                    }\n                })\n            }).catch((error) => console.log(error))\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const followUser = (user: User): ThunkAction<void, RootState, null, UserActionTypes> => {\n    return dispatch => {\n        try {\n            axios.head(`./users/${user.id}/follow`).then(() => {\n                user.followers_count += user.isFollowed ? -1 : +1;\n                user.isFollowed = !user.isFollowed;\n                dispatch({\n                    type: FOLLOW_USER,\n                    payload: user\n                })\n            }).catch((error) => console.log(error))\n        } catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\n\nexport const deletePost = (id: number): ThunkAction<void, RootState, null, UserActionTypes> => {\n    return dispatch => {\n        dispatch(setLoadingUser(true));\n        try{\n            axios.delete(`/posts/${id}`, {\n                headers: {\n                    Accept: \"application/json\",\n                },\n            }).then(()  => {\n                dispatch({\n                    type: DELETE_POST,\n                    payload: id\n                })\n            }).catch(error => console.log(error))\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n        finally {\n            setLoadingUser(false);\n        }\n    }\n}\n\nexport const deleteUserComment = (post: PostModel, comment: Comment): ThunkAction<void, RootState, null, UserActionTypes> => {\n    return dispatch => {\n        try{\n            axios.delete(`./comments/${comment.id}`\n            ).then((response) => {\n                console.log(response);\n                const comments = post.comments.filter((com) => com.id !== comment.id);\n                dispatch({\n                    type: DELETE_USER_COMMENT,\n                    payload: {\n                        ...post,\n                        comments\n                    },\n                })\n            }).catch((error) => console.log(error));\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const addUserComment = (comment: string, post: PostModel, setLoading: React.Dispatch<React.SetStateAction<boolean>>): ThunkAction<void, RootState, null, UserActionTypes> => {\n    return dispatch => {\n        try{\n            axios.post(\"./comments\", {content: comment, post_id: post.id}, {\n\n            }).then((response) => {\n                console.log(response);\n                const location = response.data.data.location;\n                axios.get(`.${location}`).then((response) => {\n                    post.comments.push(response.data.data);\n                    console.log(response);\n                    dispatch({\n                        type: ADD_USER_COMMENT,\n                        payload: post\n                    })\n                    setLoading(false);\n                }).catch((error) => console.log(error))\n            }).catch((error) => console.log(error));\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const likeUserPost = (post: PostModel): ThunkAction<void, RootState, null, UserActionTypes> => {\n    return dispatch => {\n        try{\n            axios.head(`/posts/${post.id}/like`, {\n                headers: {\n                    Accept: \"application/json\",\n                },\n            }).then(()  => {\n                post.likes_count += post.isLiked ? -1 : 1;\n                post.isLiked = !post.isLiked;\n                dispatch({\n                    type: LIKE_USER_POST,\n                    payload: post\n                })\n            }).catch((error) => console.log(error))\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}\n\nexport const setLoadingUser = (loadingValue: boolean): ThunkAction<void, RootState, null, UserActionTypes> => {\n    return dispatch => {\n        try{\n            dispatch({\n                type: SET_LOADING_USER,\n                payload: loadingValue\n            });\n        }\n        catch (error: any) {\n            console.log(error);\n        }\n    }\n}","import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport {Comment} from \"../models/CommentModel\";\nimport {PostModel} from \"../models/PostModel\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {deletePostComment} from \"../store/actions/postAction\";\nimport {deleteUserComment} from \"../store/actions/userActions\";\nimport {RootState} from \"store\";\n\ninterface CommentsProps {\n    comment: Comment;\n    post: PostModel;\n    deleteComment: typeof deletePostComment | typeof deleteUserComment;\n}\n\nexport const Comments: React.FC<CommentsProps> = ({comment, post, deleteComment}) => {\n    const authId = useSelector((state: RootState) => state.auth.user?.id);\n    const action = useDispatch();\n\n    const handleDeleteComment = () => {\n        action(deleteComment(post, comment));\n    }\n\n    return (\n        <div key={comment.id} className=\"post__comment\">\n            <p>\n                <Link to={`/profile/${post.id}`} className=\"post__username\">{comment.author.name}</Link>{comment.content}\n            </p>\n            {comment.author.id === authId ? <p className=\"post__comment--delete\" onClick={handleDeleteComment}>Delete</p> : <></>}\n        </div>\n    );\n}","import React, {ChangeEvent, FC, MouseEvent, useState} from 'react';\nimport {PostModel} from \"../models/PostModel\";\nimport Avatar from \"@mui/material/Avatar\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport {IconButton} from \"@mui/material\";\nimport 'App.scss';\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    addComment,\n    deletePostComment,\n    likePost\n} from \"../store/actions/postAction\";\nimport {addUserComment, deleteUserComment, likeUserPost, deletePost} from \"../store/actions/userActions\";\nimport {User} from \"../models/UserModel\";\nimport {Link} from \"react-router-dom\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { RootState } from 'store';\nimport {Comments} from \"./Comments\";\nimport moment from \"moment\";\n\ninterface PostDialogProps {\n post: PostModel;\n user: User;\n setOpen?: React.Dispatch<React.SetStateAction<boolean>>;\n isOnWall : boolean;\n}\n\nexport const PostDialog: FC<PostDialogProps> = ({post, setOpen, user, isOnWall}) => {\n    const [comment, setComment] = useState(\"\");\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [show, setShow] = useState(false);\n    const [like, setLike] = useState(post.isLiked);\n    const [likesCount, setLikesCount] = useState(post.likes_count);\n    const [loading, setLoading] = useState(false);\n    const authId = useSelector((state: RootState) => state.auth.user?.id);\n\n    const action = useDispatch();\n    const openMenu = Boolean(anchorEl);\n\n    const toggleLike = () => {\n        setLike(!like);\n        like ? setLikesCount(likesCount - 1) : setLikesCount(likesCount + 1);\n        isOnWall ? action(likePost(post)) : action(likeUserPost(post));\n    }\n\n    const toggle = () => {\n        setShow(!show);\n    };\n\n    const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleCloseMenu = () => {\n        setAnchorEl(null);\n    };\n\n    const handleDelete = () => {\n        action(deletePost(id));\n        handleCloseMenu();\n    }\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) =>{\n        setComment(event.target.value);\n    }\n\n    const handleAddComment = () => {\n        setLoading(true);\n        isOnWall ? action(addComment(comment, post, setLoading)) : action(addUserComment(comment, post, setLoading));\n        setComment(\"\");\n    }\n\n    const { id, author, description, likes_count, comments, img_url } = post;\n    return (\n        <div className=\"post-dialog\">\n        <div className=\"post-dialog__header\">\n            <div className=\"post-dialog__author\">\n                <Avatar alt={user.name} src={user.avatar_url} className=\"post-dialog__header__author__avatar\" />\n                <p  className=\"post-dialog__author-name\">{user.name}</p>\n            </div>\n            {authId === post.author_id ? <IconButton className=\"post-dialog__menu\" onClick={handleClick}>\n                <MoreHorizIcon />\n            </IconButton> : <></>}\n\n        </div>\n\n        <img src={img_url} alt={user.name} />\n        <section className=\"post-dialog__content\">\n            <div className=\"post-dialog__buttons\">\n                {like ? <i className=\"fas fa-fire post-dialog__icon-filled\" onClick={toggleLike}/> : <i className=\"fas fa-fire\" onClick={toggleLike} />}\n                <i className=\"far fa-comment post-dialog__icon\" onClick={toggle}/>\n                <i className=\"far fa-bookmark post-dialog__icon\" />\n            </div>\n\n            <p className=\"post-dialog__likes\">Likes: {likesCount}</p>\n            <div className='post__description'><Link to={`/profile/${author.id}`} className=\"post__username post__username--author\">{author.name}</Link>\n                {description}</div>\n            <div className=\"post-comments\">\n                {comments && comments.map(comment => (\n                    <Comments key={comment.id} post={post} comment={comment}\n                              deleteComment={isOnWall ? deletePostComment : deleteUserComment}/>)\n                )}\n            </div>\n            <p className=\"post-dialog__update-time\">{`created at ${moment(post.created_at*1000).format('YYYY/MM/DD')}`}</p>\n            {show &&\n            <article className=\"post-dialog__comment-container\">\n                <input className=\"post-dialog__input\" placeholder=\"Add comment...\" onChange={handleChange} value={comment!}/>\n                {loading ? <CircularProgress size={30} /> : <button className=\"post-dialog__share-comment\" onClick={handleAddComment}>Share</button>}\n            </article>}\n        </section>\n        <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={openMenu}\n            onClose={handleCloseMenu}\n            MenuListProps={{\n                \"aria-labelledby\": \"basic-button\",\n            }}\n        >\n            {user && user.id === post.author_id && <MenuItem onClick={handleDelete}>Delete</MenuItem>}\n            {user && user.id === post.author_id && <Link to={`/editPost`} state={{id: post.id}}><MenuItem>Edit</MenuItem></Link>}\n            <MenuItem onClick={handleCloseMenu}>Cancel</MenuItem>\n        </Menu>\n        </div>\n    );\n }","import MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport Avatar from \"@mui/material/Avatar\";\nimport \"App.scss\";\nimport React, {useEffect, useState} from \"react\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport {IconButton} from \"@mui/material\";\nimport {Modal} from \"./Modal\";\nimport {PostModel} from \"../models/PostModel\";\nimport {PostDialog} from \"./PostDialog\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {deletePostComment, likePost} from \"../store/actions/postAction\";\nimport {Link} from 'react-router-dom';\nimport {Comment} from \"../models/CommentModel\";\nimport userReducer from \"../store/reducers/userReducer\";\nimport {RootState} from \"../store\";\nimport {Comments} from \"./Comments\";\nimport moment from \"moment\";\n\ninterface PostProps {\n  post: PostModel\n}\n\nexport const Post: React.FC<PostProps> = ({\n    post\n}) => {\n  const action = useDispatch();\n  const { description, isLiked, likes_count, comments, author} = post;\n  const [openPost, setOpenPost] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const authId = useSelector((state: RootState) => state.auth.user?.id);\n  const open = Boolean(anchorEl);\n  useEffect(() => {\n\n  }, [isLiked])\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleOpen = () => {\n    handleClose();\n    setOpenPost(true);\n  }\n\n  const toggle = () => {\n    action(likePost(post));\n  };\n\n  return (\n    <div className=\"post\">\n      <div className=\"post__nav\">\n        <div>\n          <Avatar alt=\"post\" src={author.avatar_url} />\n          <Link to={`/profile/${author.id}`} className=\"post__username\">{author.name}</Link>\n        </div>\n        <IconButton onClick={handleClick}>\n          <MoreHorizIcon />\n        </IconButton>\n        <Menu\n          id=\"basic-menu\"\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          MenuListProps={{\n            \"aria-labelledby\": \"basic-button\",\n          }}\n        >\n          <MenuItem onClick={handleOpen}>Redirect to post</MenuItem>\n          <MenuItem onClick={handleClose}>Stop following</MenuItem>\n          <MenuItem onClick={handleClose}>Cancel</MenuItem>\n        </Menu>\n      </div>\n      <div>\n        <img className=\"post__img\" src={post.img_url} alt=\"instaphoto\" />\n        <div className=\"post__info\">\n          <div className=\"post__buttons\">\n            {isLiked ? <i className=\"fas fa-fire post-icon post-icon--filled\" onClick={toggle}/> :\n                <i className=\"fas fa-fire post-icon\" onClick={toggle} />}\n            <i className=\"far fa-bookmark post-icon\" />\n          </div>\n\n          <p className=\"post-likes\">Likes: {likes_count}</p>\n\n          <div className='post__description'><Link to={`/profile/${author.id}`} className=\"post__username post__username--author\">{author.name}</Link>\n            {description}</div>\n          <div className=\"post-comments\">\n            {comments && comments.slice(0,3).map(comment =>\n                <Comments key={comment.id} comment={comment} post={post} deleteComment={deletePostComment}/>\n            )}\n          </div>\n\n          <p className=\"post-creation-date\">{`created at ${moment(post.created_at*1000).format('YYYY/MM/DD')}`}</p>\n        </div>\n      </div>\n      <Modal open={openPost} setOpen={setOpenPost} fullWidth={true} maxWidth=\"sm\" children={<PostDialog post={post} user={post.author} setOpen={setOpenPost} isOnWall={true}/>} />\n    </div>\n  );\n};\n","import \"App.scss\";\nimport {Post} from \"components/Post\";\nimport {PostModel} from \"models/PostModel\";\nimport React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"store\";\nimport {setLoadingPost, setPosts} from \"store/actions/postAction\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Button from '@mui/material/Button';\n\ninterface HomeProps {}\n\nexport const Home: React.FC<HomeProps> = ({}) => {\n  const action = useDispatch();\n  const { posts, postLoading, hasNextPage, currentPage } = useSelector((state: RootState) => state.posts);\n\n  useEffect(() => {\n    action(setLoadingPost(true));\n    action(setPosts(1, []));\n  }, []);\n\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    hasNextPage && action(setPosts(currentPage+1, posts!));\n  }\n\n  if (postLoading) {\n    return (\n      <div className=\"home-wrapper\">\n        <CircularProgress size={40} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"home-wrapper\">\n      {posts &&\n        posts.map((post: PostModel) => (\n          <Post\n            key={post.id}\n            post={post}\n          />\n        ))}\n      {hasNextPage && <Button onClick={handleClick}>Load more posts...</Button>}\n    </div>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { RootState } from \"store\";\n\ninterface ProtectedRouteProps {\n  children: JSX.Element;\n}\n\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\n  const { authenticated } = useSelector((state: RootState) => state.auth);\n\n  //   if (loading) {\n  //     return <p>Checking authenticaton..</p>;\n  //   }\n\n  if (authenticated) {\n    return children;\n  }\n\n  return <Navigate to=\"/signin\" />;\n};\n","import { useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { RootState } from \"store\";\n\n\ninterface PublicRouteProps {\n  children: JSX.Element;\n}\n\nexport const PublicRoute: React.FC<PublicRouteProps> = ({ children }) => {\n  const { authenticated } = useSelector((state: RootState) => state.auth);\n\n  if (authenticated) {\n    return <Navigate to=\"/home\" />;\n  }\n\n  return children;\n};\n","import * as React from 'react';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport HomeIcon from '@mui/icons-material/Home';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Avatar from \"@mui/material/Avatar\";\nimport 'App.scss';\nimport {Link} from 'react-router-dom';\nimport {SvgIconProps} from '@mui/material/SvgIcon';\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../store\";\n\ninterface ListOfButtonTypes {\n    value: string;\n    icon: React.ReactElement<SvgIconProps>;\n}\n\ninterface BottomNavbarProps {\n\n}\n\nexport const BottomNavbar: React.FC<BottomNavbarProps> = () => {\n    const [value, setValue] = React.useState(\"home\");\n    const { user } = useSelector((state: RootState) => state.auth)\n    const ListOfButtons: ListOfButtonTypes[] = [\n        {\n            value: \"home\",\n            icon: <HomeIcon />,\n        },\n        {\n            value: \"search\",\n            icon: <SearchIcon />,\n        },\n        {\n            value: `profile/${user!.id}`,\n            icon:<Avatar\n                alt={user!.name}\n                src={user!.avatar_url}\n                sx={{ width: 24, height: 24 }}\n            />\n        }\n    ];\n\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\n        setValue(newValue);\n    };\n\n  return (\n          <BottomNavigation value={value} onChange={handleChange} className=\"bottom-navbar\">\n              {ListOfButtons.map((button) => {\n                  return (\n                      <BottomNavigationAction\n                          key={button.value}\n                          component={Link}\n                          to={`/${button.value}`}\n                          value={button.value}\n                          icon={button.icon}\n                      />\n                  );\n              })}\n          </BottomNavigation>\n\n  );\n }","import React, {useState} from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Drawer from '@mui/material/Drawer';\n\ninterface DrawerProps {\n    list?: JSX.Element;\n    drawerTitle: string;\n}\n\nexport const DrawerComponent: React.FC<DrawerProps> = ({drawerTitle, list}) => {\n    const [visible, setVisible] = useState(false);\n\n    const toggle = () => {\n        setVisible(!visible);\n    };\n\n    const drawerContent = () => (\n        <Box\n            role=\"presentation\"\n            onClick={toggle}\n            onKeyDown={toggle}\n        >\n            {list}\n        </Box>\n    );\n\n    return (\n        <div>\n            <Button onClick={toggle} variant=\"outlined\" color=\"primary\">\n                {drawerTitle}\n            </Button>\n            <Drawer open={visible} onClose={toggle} anchor=\"bottom\">\n                {drawerContent()}\n            </Drawer>\n        </div>\n  );\n }","import React from 'react'\nimport Avatar from \"@mui/material/Avatar\";\nimport {Link} from \"react-router-dom\";\nimport {PostModel} from \"../models/PostModel\";\n\ninterface SimplePostDialogProps {\n    post: PostModel\n}\n\nexport const SimplePostDialog: React.FC<SimplePostDialogProps> = ({post}) => {\n    return (<div className=\"post-dialog\">\n        <div className=\"post-dialog__header\">\n            <div className=\"post-dialog__author\">\n                <Avatar alt={post.author.name} src={post.author.avatar_url} className=\"post-dialog__header__author__avatar\" />\n                <Link to={`/profile/${post.author.id}`} className=\"post__username simple-post-user\">{post.author.name}</Link>\n            </div>\n            <></>\n        </div>\n        <img src={post.img_url} alt={post.img_url} />\n        <section className=\"post-dialog__content\">\n        <p className=\"post-dialog__likes\">Likes: {post.likes_count}</p>\n        <div className='post__description'><Link to={`/profile/${post.author.id}`} className=\"post__username post__username--author\">{post.author.name}</Link>\n            {post.description}</div>\n        </section>\n\n    </div>);\n}","import React, {useState} from 'react';\nimport {PostModel} from \"../models/PostModel\";\nimport {PostDialog} from \"./PostDialog\";\nimport {Modal} from \"./Modal\";\nimport { useSelector } from 'react-redux';\nimport {RootState} from \"../store\";\nimport {SimplePostDialog} from \"./SimplePostDialog\";\n\ninterface ProfilePostProps {\n    post: PostModel\n    searchActive: boolean;\n}\n\nconst ProfilePost: React.FC<ProfilePostProps> = ({ post , searchActive}) => {\n    const [open, setOpen] = useState(false);\n    const { user } = useSelector((state: RootState) => state.userReducer);\n\n    const toggle = () => {\n        setOpen(!open);\n    }\n\n\n    return (\n        <div>\n        <div className=\"profile-posts-item\" onClick={toggle}>\n            <img className=\"profile-posts-item-image\" src={post.img_url} alt=\"xd\"/>\n            <div className=\"profile-posts-item-overlay\">\n                <div className=\"profile-posts-item-overlay-container\">\n                    <div className=\"profile-posts-item-overlay-icon\">\n                        <i className=\"fas fa-comment\"/>\n                        <p>{post.comments_count}</p>\n                    </div>\n                    <div className=\"profile-posts-item-overlay-icon\">\n                        <i className=\"fas fa-heart\"/>\n                        <p>{post.likes_count}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n            <Modal children={searchActive ? <SimplePostDialog post={post}/> : <PostDialog post={post} user={user!} isOnWall={false}/>} open={open} setOpen={setOpen} fullWidth={true} maxWidth=\"sm\"/>\n        </div>\n    );\n};\n\nexport default ProfilePost;\n","import React, {useState} from 'react';\nimport {PasswordInput} from \"./PasswordInput\";\nimport Button from \"@mui/material/Button\";\nimport {FormProvider, useForm} from \"react-hook-form\";\nimport {passwordResetData} from \"../models/Authentication\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport {passwordSchema, signUpSchema} from \"../pages/auth/ValidationSchema\";\nimport {useDispatch} from \"react-redux\";\nimport {passwordReset} from \"store/actions/authActions\";\n\ninterface ResetPasswordDialogProps {\n\n}\n\nexport const ResetPasswordDialog: React.FC<ResetPasswordDialogProps> = () => {\n    const methods = useForm<passwordResetData>({\n        resolver: yupResolver(passwordSchema),\n    });\n    const [password, confirmedPassword] = methods.watch(['password' ,'password_confirmation']);\n    const action = useDispatch();\n\n    const onSubmit = (data: passwordResetData) => {\n        console.log(\"ebeebe\");\n        action(passwordReset(data));\n    };\n\n  return (\n       <section className=\"reset\">\n           <h1>Change your password</h1>\n           <FormProvider {...methods}>\n               <form\n                   onSubmit={methods.handleSubmit(onSubmit)}\n                   className=\"reset__form reset__form--edit-password\"\n               >\n\n                   <PasswordInput label=\"New password\" name=\"password\" variant=\"outlined\" />\n                   <PasswordInput\n                       label=\"Confirm Password\"\n                       name=\"password_confirmation\"\n                       variant=\"outlined\"\n                   />\n                   {password !== undefined && password === confirmedPassword ? <Button type=\"submit\" variant=\"contained\">\n                       Change password\n                   </Button> : <Button type=\"submit\" variant=\"contained\" disabled >\n                       Change password\n                   </Button>}\n\n               </form>\n           </FormProvider>\n       </section>\n  );\n }","import React, {ChangeEvent, useState} from 'react';\nimport Button from \"@mui/material/Button\";\nimport Avatar from '@mui/material/Avatar';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"store\";\nimport {changeUsername, setAvatar} from \"../../store/actions/authActions\";\nimport {TextField} from \"@mui/material\";\nimport imageCompression from 'browser-image-compression';\n\ninterface EditProfileProps {\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const EditProfile: React.FC<EditProfileProps> = ({setOpen}) => {\n    const action = useDispatch();\n    const {user} = useSelector((state: RootState) => state.auth);\n    const [username, setUsername] = useState(\"\");\n\n    const handleSubmit = (event: React.FormEvent) => {\n        action(changeUsername(username));\n        setOpen(false);\n        event.preventDefault();\n    };\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setUsername(event.target.value);\n    }\n\n    const changeAvatar = (event: ChangeEvent<HTMLInputElement>) => {\n        const options = {\n            maxWidthOrHeight: 100,\n            useWebWorker: true\n        }\n        event.target.files && imageCompression(event.target.files[0], options).then((compressedFile) => {\n            event.target.files && (action(setAvatar(compressedFile)));\n        }).catch((error) => console.log(error))\n\n    }\n  return (\n   <div className=\"edit-profile\">\n    <h1>Edit profile</h1>\n       <div className=\"edit-profile__header\">\n           <Avatar alt={user!.name} src={user?.avatar_url} sx={{ width: 56, height: 56 }}/>\n           <div className=\"edit-profile__user-info\">\n               <p className=\"edit-profile__username\">{user?.name}</p>\n               <label className=\"edit-profile__clickable-text\">\n                   <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={changeAvatar}/>\n                   Change avatar\n               </label>\n           </div>\n       </div>\n       <section>\n               <form\n                   onSubmit={handleSubmit}\n                   className=\"reset__form reset__form--edit-profile\"\n               >\n                   <TextField label=\"Username\" name=\"username\" placeholder={user!.name} type=\"text\" variant=\"outlined\" onChange={handleChange}/>\n                   <Button type=\"submit\" variant=\"contained\">\n                       Edit username\n                   </Button>\n               </form>\n       </section>\n   </div>\n  );\n }","import React, {useEffect, useState} from 'react';\nimport axios from \"../../utils/axiosInstance\";\nimport {User} from \"../../models/UserModel\";\nimport Avatar from \"@mui/material/Avatar\";\nimport {Link} from 'react-router-dom';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n\ninterface FollowListDialogProps{\n    id: number\n    path: 'followed' | 'followers';\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst FollowListDialog: React.FC<FollowListDialogProps> = ({id, path, setOpen}) => {\n\n    const [users, setUsers] = useState<null | User[]>(null);\n\n    async function fetchData() {\n        await axios.get(`./users/${id}/${path}`, {\n            headers: {\n            Accept: \"application/json\",\n        }}).then((response) => {\n            const users = response.data.data as User[];\n            setUsers(users);\n            }\n        ).catch(error => console.log(error));\n    }\n\n    useEffect(() => {\n        fetchData();\n\n        return () => {\n            setOpen(false);\n        }\n    }, []);\n\n    return (\n        <section className=\"follow-dialog\">\n            <h1>{path.charAt(0).toUpperCase() + path.slice(1)}</h1>\n            <article className=\"follow-dialog__users\">\n                {users ? users.map(user => (\n                    <section key={user.id} className=\"follow-dialog__user\">\n\n                        <div className=\"follow-dialog__avatar\">\n                            <Link to={`/profile/${user.id}`}><Avatar\n                                alt={user.name}\n                                src={user.avatar_url}\n                                sx={{ width: 30, height: 30 }}\n\n                            /></Link>\n                        </div>\n                        <Link to={`/profile/${user.id}`}>{user.name}</Link>\n                    </section>\n                )) : <section className=\"follow-dialog__loading\">\n                    <CircularProgress />\n                </section>}\n            </article>\n        </section>\n    );\n};\n\nexport default FollowListDialog;\n","import React, {useEffect, useState} from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from \"@mui/material/Button\";\nimport {signOut} from \"store/actions/authActions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {DrawerComponent} from \"../../components/DrawerComponent\";\nimport List from \"@mui/material/List\";\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport {RootState} from \"../../store\";\nimport {PostModel} from 'models/PostModel';\nimport ProfilePost from \"../../components/ProfilePost\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport {Modal} from \"../../components/Modal\";\nimport {ResetPasswordDialog} from \"../../components/ResetPasswordDialog\";\nimport {EditProfile} from \"./EditProfile\";\nimport {useParams} from \"react-router-dom\";\nimport {followUser, getUserById, getUserPosts, setLoadingUser} from \"../../store/actions/userActions\";\nimport FollowListDialog from \"./FollowListDialog\";\nimport {setPosts} from \"../../store/actions/postAction\";\n\ninterface ProfileProps {\n\n}\n\ntype Path = 'followers' | 'followed';\n\nexport const Profile: React.FC<ProfileProps> = () => {\n    const action = useDispatch();\n    const loggedUserId = useSelector((state: RootState) => state.auth.user!.id);\n    const { user, userLoading, posts, currentPage, hasNextPage } = useSelector((state: RootState) => state.userReducer);\n    const { id } = useParams<string>();\n    const [open, setOpen] = useState(false);\n    const [openEditProfile, setOpenEditProfile] = useState(false);\n    const [followOpen, setFollowOpen] = useState(false);\n    const [path, setPath] = useState<Path>('followers');\n\n    useEffect(() => {\n        action(setLoadingUser(true));\n        action(getUserById(Number(id)));\n        action(getUserPosts(Number(id), [], 1));\n    }, [id]);\n\n    const handleLoadClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n        hasNextPage && action(getUserPosts(user!.id, posts!, currentPage+1));\n    }\n\n\n    const handleClick = () => {\n        action(signOut());\n    }\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n\n    const handleOpenEditProfile = () => {\n        setOpenEditProfile(true);\n    }\n\n    const handleFollow = () => {\n        user && action(followUser(user));\n    }\n\n    const handleFollowOpen = (passedPath: Path) =>{\n        if( user &&\n            ((user.followers_count > 0 && passedPath === 'followers')\n            || (user.followed_count > 0 && passedPath === 'followed'))){\n            setPath(passedPath);\n            setFollowOpen(true);\n        }\n    }\n\n    const list = () => {\n        return (<List>\n            <ListItem button>\n            <ListItemIcon><i className=\"fas fa-cog\" /></ListItemIcon>\n            <ListItemText onClick={handleOpen}>Change password</ListItemText>\n        </ListItem>\n            <ListItem button>\n                <ListItemIcon><i className=\"fas fa-sign-out-alt\" /></ListItemIcon>\n                <ListItemText onClick={handleClick}>Sign Out</ListItemText>\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon><i className=\"far fa-times-circle\"/></ListItemIcon>\n                <ListItemText>Cancel</ListItemText>\n            </ListItem>\n        </List>);\n    };\n\n    const buttons = () => {\n        if(loggedUserId === Number(id)){\n            return (<div className=\"profile-buttons\">\n                <Button variant=\"outlined\" onClick={handleOpenEditProfile}>Edit profile</Button>\n                <DrawerComponent list={list()} drawerTitle=\"Settings\"/>\n            </div>)\n        }\n        else{\n            return (<div className=\"profile-buttons\">\n                {user?.isFollowed ? <Button variant=\"outlined\" onClick={handleFollow}>Unfollow</Button> : <Button variant=\"outlined\" onClick={handleFollow}>Follow</Button>}\n            </div>)\n        }\n    }\n\n\n    if(userLoading){\n        return <div className=\"home-wrapper\">\n            <CircularProgress size={40} />\n        </div>\n    }\n  return (\n   <div className=\"profile-wrapper\">\n    <div className=\"profile-header\">\n        <Avatar\n            alt={user?.name}\n            src={user?.avatar_url}\n            sx={{ width: 70, height: 70 }}\n        />\n        <div className=\"profile-header-right\">\n            {user && <p>{user!.name}</p>}\n            <div className=\"profile-statistics-container\">\n                <div className=\"profile-statistics\">\n                    <p className=\"profile-statistics-number\">{user?.posts_count}</p>\n                    <p>Posts</p>\n                </div>\n                <div className=\"profile-statistics\" onClick={() => handleFollowOpen('followers')}>\n                    <p className=\"profile-statistics-number\">{user?.followers_count}</p>\n                    <p>Followers</p>\n                </div>\n                <div className=\"profile-statistics\" onClick={() => handleFollowOpen('followed')}>\n                    <p className=\"profile-statistics-number\">{user?.followed_count}</p>\n                    <p>Following</p>\n                </div>\n            </div>\n        </div>\n    </div>\n       <div className=\"profile-buttons\">\n           {buttons()}\n       </div>\n       <div className=\"profile-posts\">\n           {posts && posts.map((post:PostModel) =>\n               <ProfilePost post={post} key={post.id} searchActive={false}/>\n           )}\n       </div>\n        <Modal open={open} setOpen={setOpen} children={<ResetPasswordDialog />}/>\n        <Modal open={openEditProfile} setOpen={setOpenEditProfile} children={<EditProfile setOpen={setOpenEditProfile} />}/>\n       {user &&\n           <Modal open={followOpen} setOpen={setFollowOpen} scrollType='paper'\n                  children={<FollowListDialog id={user.id} path={path} setOpen={setFollowOpen} />}\n       />}\n       {hasNextPage && <Button onClick={handleLoadClick}>Load more posts...</Button>}\n   </div>\n  );\n }","import * as React from 'react';\nimport {useState} from 'react';\nimport TextField from '@mui/material/TextField';\nimport {PostModel} from \"../../models/PostModel\";\nimport {User} from '../../models/UserModel'\nimport axios from \"utils/axiosInstance\";\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Avatar from \"@mui/material/Avatar\";\nimport {Link} from \"react-router-dom\";\nimport ProfilePost from \"../../components/ProfilePost\";\nimport {useDebouncedCallback} from 'use-debounce';\nimport InputAdornment from '@mui/material/InputAdornment';\n\ninterface SearchProps {\n\n}\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: number;\n    value: number;\n}\nconst TabPanel = (props: TabPanelProps) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <div>{children}</div>\n                </Box>\n            )}\n        </div>\n    );\n}\nexport const Search: React.FC<SearchProps> = () => {\n    const [value, setValue] = useState(0);\n    const [posts, setPosts] = useState<PostModel[] | null>(null);\n    const [users, setUsers] = useState<User[] | null>(null);\n    const [loading, setLoading] = useState(false);\n\n    const debounced = useDebouncedCallback(\n        (searchValue) => {\n            if(searchValue.length >= 4){\n                setLoading(true);\n                console.log(searchValue);\n                axios.get('/search', {\n                    params: {\n                        'user': searchValue,\n                        'post': searchValue,\n                    },\n                    headers: {\n                        Accept: 'application/json'\n                    }\n                }).then((response) => {\n                    console.log(response);\n                    const foundUsers = response.data.data.users;\n                    const foundPosts = response.data.data.posts;\n\n                    setUsers(foundUsers);\n                    setPosts(foundPosts);\n                    setLoading(false);\n                }).catch(error => console.log(error));\n            }\n        },\n        // delay in ms\n        1000\n    );\n\n    const handleChangeTab = (event: React.SyntheticEvent, newValue: number) => {\n        setValue(newValue);\n    };\n\n    return (\n   <div className=\"search\">\n       <div className=\"search__input\">\n           <TextField\n               fullWidth\n               placeholder=\"Search\"\n               onChange={(e) => debounced(e.target.value)}\n               variant=\"standard\"\n               InputProps={{\n                   startAdornment: (\n                       <InputAdornment position=\"start\">\n                           <i className=\"fas fa-search\" />\n                       </InputAdornment>\n                   ),\n               }}\n           />\n       </div>\n       <div className=\"search__content\">\n\n           <Box sx={{ width: '100%' }}>\n               <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                   <Tabs value={value} onChange={handleChangeTab}>\n                       <Tab label=\"Users\" />\n                       <Tab label=\"Posts\" />\n                   </Tabs>\n               </Box>\n               <TabPanel value={value} index={0}>\n                   {loading ? <div className=\"search__loading\"><CircularProgress size={40} /></div> : users && users.map((user) => (\n                       <section key={user.id} className=\"follow-dialog__user\">\n\n                           <div className=\"follow-dialog__avatar\">\n                               <Link to={`/profile/${user.id}`}><Avatar\n                                   alt={user.name}\n                                   src={user.avatar_url}\n                                   sx={{ width: 30, height: 30 }}\n\n                               /></Link>\n                           </div>\n                           <Link to={`/profile/${user.id}`}>{user.name}</Link>\n                       </section>\n                   ))}\n               </TabPanel>\n               <TabPanel value={value} index={1}>\n                   {loading ? <div className=\"search__loading\"><CircularProgress size={40} /></div> : posts && <div className=\"profile-posts\">{posts.map((post) => (\n                       <ProfilePost post={post} key={post.id} searchActive={true}/>\n                   ))}</div>}\n               </TabPanel>\n           </Box>\n       </div>\n\n   </div>\n  );\n }","import React from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport Button from '@mui/material/Button';\n\ninterface DropzoneProps {\n    setFile: React.Dispatch<React.SetStateAction<File | null>>;\n}\n\n\nexport const Dropzone: React.FC<DropzoneProps> = ({setFile}) => {\n    const onDrop = (acceptedFiles: File[]) => {\n        acceptedFiles.forEach((file) => {\n            console.log(file)\n            setFile(file);\n        });\n    };\n\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({onDrop, accept: 'image/png, image/jpg, image/jpeg', multiple: false,\n        maxFiles: 1,});\n\n    const test = () => {\n        if(isDragReject){\n            return 'icon--drag-reject';\n        }\n        if(isDragAccept){\n            return 'icon--drag-accept';\n        }\n    }\n\n    return (\n            <div {...getRootProps()} className=\"dropzone\">\n                <input {...getInputProps()}/>\n                <i className={`far fa-images icon ${test()}`} />\n                {isDragAccept && (<p className=\"dropzone__info\">File will be accepted</p>)}\n                {isDragReject && (<p className=\"dropzone__info\">File will be rejected</p>)}\n                {!isDragActive && (<p className=\"dropzone__info\">Drop photo here</p>)}\n                <Button variant=\"contained\">Choose from device</Button>\n\n            </div>\n    );\n}","import React, {useEffect, ChangeEvent} from 'react'\nimport TextField from '@mui/material/TextField';\nimport {AddPostModel} from 'models/PostModel';\nimport Avatar from '@mui/material/Avatar';\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../store\";\n\ninterface PostFormProps {\n    setPost: React.Dispatch<React.SetStateAction<AddPostModel>>;\n    post: AddPostModel;\n    file: File | null;\n}\n\nexport const PostForm: React.FC<PostFormProps> = ({setPost, post, file}) => {\n    const { user } = useSelector((state: RootState) => state.auth);\n    const handleChange = (event:  ChangeEvent<HTMLInputElement>) => {\n        setPost({\n            ...post,\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    useEffect(() => {\n        setPost({\n            ...post,\n            photo: file\n        })\n    }, [file])\n\n    return (\n        <main className='post-form'>\n            <img src={URL.createObjectURL(file)} alt=\"editImage\" className=\"add-post__image\"/>\n            <div className=\"post-form__user-info\">\n                <Avatar alt=\"xd\" src={user?.avatar_url} />\n                <p>{user!.name}</p>\n            </div>\n            <div className=\"post-form__inputs\">\n\n                <TextField\n                    fullWidth\n                    label=\"Add description\"\n                    multiline\n                    maxRows={4}\n                    value={post?.description}\n                    onChange={handleChange}\n                    name='description'\n                    className='post-form__input'\n                />\n                <TextField\n                    fullWidth\n                    label=\"Tags\"\n                    placeholder=\"#Tag #Tag #Tag\"\n                    value={post?.tags}\n                    onChange={handleChange}\n                    name='tags'\n                    className='post-form__input'\n                />\n            </div>\n        </main>\n    );\n}","import * as React from 'react';\nimport {useEffect, useState} from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport {Dropzone} from \"../../components/Dropzone\";\nimport StepLabel from '@mui/material/StepLabel';\nimport {PostForm} from \"./PostForm\";\nimport {AddPostModel} from 'models/PostModel';\nimport axios from \"../../utils/axiosInstance\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../store\";\nimport {setLoadingPost} from \"../../store/actions/postAction\";\nimport imageCompression from 'browser-image-compression';\nimport {setLoadingAuth} from \"../../store/actions/authActions\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport {setLoadingUser} from \"../../store/actions/userActions\";\n\n\ninterface AddPostProps {\n}\n\nconst steps = ['Add image', 'Create post'];\n\nexport const AddPost: React.FC<AddPostProps> = () => {\n    const { user } = useSelector((state: RootState) => state.auth);\n    const { userLoading } = useSelector((state: RootState) => state.userReducer);\n\n    const [file, setFile] = useState<File | null>(null);\n    const [activeStep, setActiveStep] = useState(0);\n    const [isOpen, setIsOpen] = useState(false);\n    const [post, setPost] = useState<AddPostModel>({\n        photo: null,\n        description: '',\n        tags: ''\n    });\n    const action = useDispatch();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n    }, [file, post]);\n\n    const handleOpen = () => {\n        setIsOpen(true);\n    }\n\n\n    const stepsElements = [\n        {\n             htmlElement: !file ? <Dropzone setFile={setFile}/> : <img src={URL.createObjectURL(file)} alt=\"post\" onClick={handleOpen} className=\"add-post__image\"/>\n        },\n        {\n            htmlElement: <PostForm setPost={setPost} post={post} file={file}/>\n        }\n    ]\n    const handleNext = () => {setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    const removeImage = () => {\n        setFile(null);\n    }\n\n    const handleAddPost = async () => {\n        action(setLoadingUser(true));\n        const fData = new FormData();\n        const options = {\n            maxSizeMB: 1,\n            maxWidthOrHeight: 1920,\n            useWebWorker: true\n        }\n        file && imageCompression(file, options)\n            .then((compressedFile) => {\n                console.log(compressedFile);\n                fData.append('photo', compressedFile);\n                post.description && fData.append('description', post.description);\n                post.tags && fData.append('tags', post.tags);\n\n                axios.post(`./posts`,\n                    fData,\n                    {\n                        headers: {\n                            'Content-Type': 'multipart/form-data'\n                        }\n                    }\n                ).then((res) => {\n                    console.log(res.data);\n                    navigate(`/profile/${user!.id}`);\n                    action(setLoadingUser(false));\n                }).catch((error) => console.log(error))\n            }).catch((error) => console.log(error))\n        console.log(post.photo);\n    }\n\n    if(userLoading){\n        return <div className=\"add-post__loading\"><CircularProgress size={40} /></div>\n    }\n\n    return (\n        <main className='add-post'>\n            <Box sx={{width: '100%'}}>\n            <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map((label, index) => {\n                    const stepProps: { completed?: boolean } = {};\n                    const labelProps: {\n                        optional?: React.ReactNode;\n                    } = {};\n                    return (\n                        <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            {activeStep === steps.length ? (\n                <React.Fragment>\n                    <Typography sx={{ mt: 2, mb: 1 }}>\n                        All steps completed - you&apos;re finished\n                    </Typography>\n                    <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n                        <Box sx={{ flex: '1 1 auto' }} />\n                        <Button onClick={handleReset}>Reset</Button>\n                    </Box>\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    {/*{post.photo && <img src={URL.createObjectURL(post.photo)} alt=\"post\" />}*/}\n                    {/*{isEditMode && post.photo ? <img src={URL.createObjectURL(post.photo)} alt=\"post\" /> : stepsElements[activeStep].htmlElement}*/}\n                    {stepsElements[activeStep].htmlElement}\n                    <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n                        <Button\n                            color=\"inherit\"\n                            disabled={!file && activeStep === 0}\n                            onClick={activeStep === steps.length - 1 ? handleBack : removeImage}\n                            sx={{ mr: 1 }}\n                        >\n                            {activeStep === steps.length - 1 ? 'Back' : 'Remove photo'}\n                        </Button>\n                        <Box sx={{ flex: '1 1 auto' }} />\n                        <Button onClick={activeStep === steps.length - 1 ? handleAddPost : handleNext} disabled={!file}>\n                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                        </Button>\n                    </Box>\n                </React.Fragment>\n            )}\n            </Box>\n        </main>\n    );\n}","import React, {ChangeEvent, useEffect, useState} from 'react'\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport axios from \"utils/axiosInstance\";\nimport {PostModel} from \"../../models/PostModel\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\n\ninterface EditPostProps {\n\n}\n\nexport const EditPost: React.FC<EditPostProps> = ({}) => {\n    const [loading, setLoading] = useState(true);\n    const [post, setPost] = useState<PostModel | null>(null);\n    const { state } = useLocation();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        let unmounted = false;\n        axios.get(`./posts/${state.id}`).then((response) => {\n            if(!unmounted){\n                setPost(response.data.data);\n                setLoading(false);\n            }\n        })\n\n        return () => {\n            unmounted = true;\n        };\n    }, []);\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        post && setPost({\n            ...post,\n            [event.target.name]: event.target.value\n        });\n    }\n\n    const handleSubmit = () => {\n        axios.put(`./posts/${state.id}`, post).then(() => {\n            navigate(`/profile/${post?.author_id}`);\n        }).catch((error) => console.log(error));\n    }\n\n\n\n    if(loading){\n        return <CircularProgress size={40} />\n    }\n\n    return (<main className=\"edit-post\">\n        <h2>Edit post</h2>\n        <img src={post?.img_url} alt={post?.img_url}/>\n        <div className=\"edit-post__form\">\n            <TextField\n                fullWidth\n                label=\"Add description\"\n                multiline\n                maxRows={4}\n                value={post!.description ? post?.description : \"\"}\n                name='description'\n                className='edit-post__input'\n                onChange={handleChange}\n            />\n            <TextField\n                fullWidth\n                label=\"Tags\"\n                placeholder=\"#Tag #Tag #Tag\"\n                value={post!.tags ? post?.tags : \"\"}\n                name='tags'\n                className='edit-post__input'\n                onChange={handleChange}\n            />\n\n            <Button onClick={handleSubmit} variant=\"contained\">Save changes</Button>\n        </div>\n\n    </main>);\n}","import \"App.scss\";\nimport { Navbar } from \"components/Navbar\";\nimport { SignIn } from \"pages/auth/SignIn\";\nimport { SignUp } from \"pages/auth/SignUp\";\nimport { Home } from \"pages/home/Home\";\nimport React, { useEffect } from \"react\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport { ProtectedRoute } from \"./ProtectedRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\nimport { RootState } from \"store\";\nimport { useSelector } from \"react-redux\";\nimport { BottomNavbar } from \"../components/BottomNavbar\";\nimport { Profile } from \"../pages/profile/Profile\";\nimport { Search } from \"pages/search/search\";\nimport {AddPost} from \"../pages/addPost/AddPost\";\nimport {EditPost} from \"../pages/editPost/editPost\";\n\ninterface RoutesProps {}\n\nexport const RoutesConfig: React.FC<RoutesProps> = () => {\n  const { authenticated } = useSelector((state: RootState) => state.auth);\n\n  useEffect(() => {}, []);\n  return (\n    <HashRouter>\n      <Navbar />\n      <div className=\"content-wrapper\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <PublicRoute>\n                  <SignUp />\n              </PublicRoute>\n            }\n          />\n          <Route\n            path=\"/signup\"\n            element={\n              <PublicRoute>\n                <SignUp />\n              </PublicRoute>\n            }\n          />\n          <Route\n            path=\"/signin\"\n            element={\n              <PublicRoute>\n                <SignIn />\n              </PublicRoute>\n            }\n          />\n          <Route\n            path=\"/home\"\n            element={\n              <ProtectedRoute>\n                <Home />\n              </ProtectedRoute>\n            }\n          />\n            <Route\n                path=\"/profile/:id\"\n                element={\n                    <ProtectedRoute>\n                        <Profile />\n                    </ProtectedRoute>\n                }\n            />\n            <Route\n                path=\"/search\"\n                element={\n                    <ProtectedRoute>\n                        <Search />\n                    </ProtectedRoute>\n                }\n            />\n            <Route\n                path=\"/addPost\"\n                element={\n                    <ProtectedRoute>\n                        <AddPost />\n                    </ProtectedRoute>\n                }\n            />\n            <Route\n                path=\"/editPost\"\n                element={\n                    <ProtectedRoute>\n                        <EditPost/>\n                    </ProtectedRoute>\n                }\n            />\n\n\n        </Routes>\n      </div>\n        {authenticated && <BottomNavbar />}\n    </HashRouter>\n  );\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { RoutesConfig } from \"routes/RoutesConfig\";\nimport { store, persistor } from \"./store\";\nimport \"./App.scss\";\nimport \"./styles/global.scss\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <RoutesConfig />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}